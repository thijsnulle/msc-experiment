{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 31, 37, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 35, 31, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.000946044921875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 33, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009541511535644531, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36, 31, 37, 34, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005784034729003906, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006909370422363281, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 30, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0044901371002197266, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 34, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 30, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0034639835357666016, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 36, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 36, 31, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004072904586791992, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 31, 35, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.000823974609375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008499622344970703, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007927417755126953, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004588603973388672, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007617473602294922, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 31, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004018068313598633, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 30, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 37, 30, 35, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008347034454345703, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037310123443603516, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007469654083251953, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004018068313598633, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007278919219970703, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 36, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015078067779541016, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006871223449707031, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 33, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008599758148193359, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 37, 34, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 36, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 35, 37, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003461122512817383, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0034689903259277344, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006909847259521484, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36, 30, 33, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 35, 34, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 31, 37, 30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 31, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0034308433532714844, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007140636444091797, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 30, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007491111755371094, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004588603973388672, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008618831634521484, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 36, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004072904586791992, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31, 37, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005337238311767578, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 31, 30, 37, 35, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0023539066314697266, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015141725540161133, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 31, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005182027816772461, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0035529136657714844, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0435028076171875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 30, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007801055908203125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008251667022705078, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006158351898193359, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.03373575210571289, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037310123443603516, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006909847259521484, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34, 31, 37, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.019107818603515625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009207725524902344, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007658004760742188, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.019984006881713867, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009009838104248047, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 33, 36, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015424013137817383, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009009838104248047, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007390975952148438, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 34, 37, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 37, 34, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006239414215087891, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005125999450683594, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007140636444091797, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0040090084075927734, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 31, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008399486541748047, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006054878234863281, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 30, 34, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00151824951171875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 36, 30, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009009838104248047, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007927417755126953, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005312919616699219, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007648468017578125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 36, 35, 34, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006558895111083984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00504302978515625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 34, 30, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004388093948364258, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 37, 34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 31, 35, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 37, 34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006880760192871094, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007600784301757812, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 31, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 36, 35, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004534006118774414, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36, 35, 30, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.get_title()\n    ax.get_title()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0005629062652587891, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004072904586791992, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 31, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 30, 37, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 36, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004491090774536133, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007250308990478516, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 31, 37, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 37, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007541179656982422, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 34, 30, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 37, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004808902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 31, 30, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 34, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008349418640136719, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004588603973388672, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 30, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007889270782470703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 30, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0018320083618164062, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.014945030212402344, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 34, 37, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006054878234863281, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [31, 35, 33, 37, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0040090084075927734, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007460117340087891, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 36, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 36, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003790140151977539, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005337238311767578, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 33, 37, 31, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008728504180908203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33, 36, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004506111145019531, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006449222564697266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007870197296142578, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007140636444091797, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.019501209259033203, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 33, 35, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 31, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002753019332885742, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 33, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008127689361572266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 36, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 33, 34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008771419525146484, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 30, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004870891571044922, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 31, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003553152084350586, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 31, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0042572021484375, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 31, 35, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.007288932800292969, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004588603973388672, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 30, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 30, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35, 30, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 37, 35, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009932518005371094, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 34, 33, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37, 30, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 31, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008978843688964844, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003940105438232422, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 34, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015889883041381836, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0051310062408447266, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009369850158691406, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004072904586791992, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 37, 36, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 34, 33, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006768703460693359, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 37, 36, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009009838104248047, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 31, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006110668182373047, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 33, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 30, 35, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008020401000976562, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0015790462493896484, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 30, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004808902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 35, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007979869842529297, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003956794738769531, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008728504180908203, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002691984176635742, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 34, 35, 31, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 36, 35, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007491111755371094, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 37, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006909847259521484, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015141725540161133, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 31, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 34, 36, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004808902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 37, 33, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00490117073059082, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004808902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009207725524902344, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008819103240966797, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004018068313598633, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 33, 36, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 34, 30, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 33, 34, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_xlabel('n')\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 35, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 30, 36, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0012810230255126953, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 30, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006382465362548828, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007889270782470703, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006871223449707031, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007808208465576172, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0036139488220214844, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 35, 30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 36, 31, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31, 37, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008587837219238281, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 37, 31, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 34, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0035011768341064453, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008511543273925781, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 36, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 33, 30, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0071909427642822266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37, 30, 34, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004754781723022461, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008931159973144531, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 33, 34, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00510096549987793, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 30, 31, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008351802825927734, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33, 35, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0040090084075927734, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007750988006591797, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015264034271240234, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 34, 36, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007259845733642578, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 35, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003782033920288086, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 35, 30, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 31, 33, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 30, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005852222442626953, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 34, 36, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0048639774322509766, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 35, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006871223449707031, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 36, 35, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_xlabel('n')\n    ax.grid()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006780624389648438, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008499622344970703, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 30, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004228115081787109, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 36, 30, 34, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 37, 30, 34, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 35, 34, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004457950592041016, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006054878234863281, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 31, 36, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 36, 35, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008840560913085938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008728504180908203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008420944213867188, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007870197296142578, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003827810287475586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 37, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037310123443603516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 31, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 31, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007476806640625, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0435028076171875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33, 31, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 37, 36, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00407099723815918, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0051310062408447266, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 35, 34, 36, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003947734832763672, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 33, 34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006551742553710938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35, 37, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003461122512817383, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008182525634765625, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0051310062408447266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004662990570068359, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006968975067138672, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 34, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015889883041381836, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33, 37, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015141725540161133, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.018829822540283203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.001615285873413086, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 35, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0435028076171875, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.022851943969726562, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002691984176635742, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007810592651367188, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [31, 36, 33, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 34, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004808902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0053865909576416016, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005852222442626953, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004072904586791992, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037310123443603516, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 35, 31, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006361007690429688, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007760524749755859, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 37, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007169246673583984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008840560913085938, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 33, 30, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 31, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009009838104248047, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 31, 33, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 33, 36, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.01944708824157715, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007798671722412109, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_xlabel('n')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00067901611328125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 31, 37, 34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007359981536865234, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0071909427642822266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008099079132080078, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 36, 30, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006220340728759766, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.13258600234985352, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [35, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007927417755126953, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34, 30, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 33, 35, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007631778717041016, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 31, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 37, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00440526008605957, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.019033193588256836, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 30, 34, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00151824951171875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 35, 34, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007448196411132812, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.018795013427734375, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00440526008605957, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33, 31, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003484964370727539, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006909847259521484, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37, 35, 30, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009138584136962891, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 37, 35, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 30, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007529258728027344, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008499622344970703, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 35, 36, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 33, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.get_title()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 31, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.001302957534790039, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 31, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006361007690429688, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 33, 36, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.get_title()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00493621826171875, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 30, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 35, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 30, 36, 35, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008521080017089844, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 30, 37, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008568763732910156, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.000698089599609375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33, 37, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0012488365173339844, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 35, 34, 30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 37, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008442401885986328, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 30, 34, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00151824951171875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 33, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37, 33, 31, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.000644683837890625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 30, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 36, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003414154052734375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 31, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 34, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008072853088378906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35, 37, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 36, 35, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 37, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 34, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006399154663085938, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 36, 33, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006270408630371094, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.13426518440246582, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005312919616699219, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008101463317871094, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00363922119140625, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006902217864990234, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 37, 31, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 35, 30, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 31, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015324831008911133, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 36, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009229183197021484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 35, 37, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005337238311767578, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34, 35, 30, 36, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008041858673095703, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 35, 34, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007600784301757812, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 30, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003979921340942383, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008091926574707031, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 33, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 36, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009229183197021484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 33, 37, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005006074905395508, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003956794738769531, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 30, 34, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008287429809570312, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008499622344970703, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 36, 37, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006909370422363281, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004642009735107422, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002753019332885742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008230209350585938, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 33, 31, 35, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007560253143310547, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 35, 30, 34, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007028579711914062, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 31, 33, 35, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 30, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004491090774536133, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004231929779052734, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 34, 31, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 33, 34, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003924131393432617, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008738040924072266, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30, 37, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.001280069351196289, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_xlabel('n')\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002691984176635742, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 30, 34, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0046079158782958984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 30, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.014945030212402344, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 34, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004386186599731445, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34, 30, 31, 37, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005160093307495117, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 36, 30, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006220340728759766, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007517337799072266, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 35, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008881092071533203, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.000804901123046875, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.03373575210571289, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 30, 33, 34, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.get_title()\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0034799575805664062, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006909370422363281, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006909847259521484, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30, 31, 37, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008692741394042969, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008141994476318359, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 33, 35, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 34, 35, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 35, 31, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005096912384033203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 36, 37, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 33, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007648468017578125, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009660720825195312, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 34, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 35, 33, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006909370422363281, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004072904586791992, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 31, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.001302957534790039, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 30, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007958412170410156, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008351802825927734, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004231929779052734, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 33, 34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006389617919921875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007560253143310547, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [35, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006167888641357422, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00407099723815918, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006909370422363281, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 34, 30, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006630420684814453, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 34, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 30, 35, 36, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_xlabel('n')\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007169246673583984, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008361339569091797, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35, 37, 34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00078582763671875, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 36, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.019932270050048828, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004506111145019531, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004555225372314453, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 36, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006837844848632812, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37, 34, 33, 36, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015424013137817383, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 36, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006530284881591797, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 37, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0044329166412353516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008730888366699219, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0053865909576416016, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [31, 30, 33, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008020401000976562, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006270408630371094, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 30, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 34, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006070137023925781, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 31, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008187294006347656, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006320476531982422, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007150173187255859, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 34, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 33, 31, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004503011703491211, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007808208465576172, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 31, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006361007690429688, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 36, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 31, 35, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007901191711425781, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0012359619140625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007658004760742188, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0014138221740722656, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0071909427642822266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30, 34, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37, 36, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004546642303466797, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007600784301757812, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 36, 30, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008909702301025391, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004018068313598633, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004588603973388672, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 33, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.get_title()\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004111289978027344, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 30, 36, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0011303424835205078, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 35, 31, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.13258600234985352, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009009838104248047, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004792928695678711, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037889480590820312, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 36, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009558200836181641, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 36, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 37, 34, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006239414215087891, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 30, 35, 31, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007901191711425781, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 37, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.007288932800292969, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30, 37, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004808902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0036690235137939453, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33, 34, 30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004887104034423828, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 33, 35, 31, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006771087646484375, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003827810287475586, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037310123443603516, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008349418640136719, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 36, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007338523864746094, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006449222564697266, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 34, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008640289306640625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008282661437988281, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 34, 30, 36, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 37, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 31, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008187294006347656, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 37, 36, 35, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.grid()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.get_title()\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0005979537963867188, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0040090084075927734, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 35, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004106044769287109, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007617473602294922, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 31, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002691984176635742, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 35, 31, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009391307830810547, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 37, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 36, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007801055908203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009391307830810547, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 30, 37, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 34, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015889883041381836, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004228115081787109, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 34, 35, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title('Cumulative Sum Plot')\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002691984176635742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00363922119140625, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006320476531982422, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007889270782470703, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 30, 34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006530284881591797, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0040090084075927734, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 33, 30, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 35, 31, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0035619735717773438, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 31, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006909847259521484, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 35, 31, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 30, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005457878112792969, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008509159088134766, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007140636444091797, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33, 36, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003552675247192383, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 35, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003782033920288086, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003843069076538086, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 35, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008900165557861328, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 33, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0034139156341552734, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009009838104248047, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 30, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008409023284912109, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 30, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006787776947021484, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 36, 37, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007328987121582031, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0053865909576416016, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004887104034423828, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.007169008255004883, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004792928695678711, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 36, 33, 37, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005006074905395508, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006871223449707031, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 36, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009229183197021484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0013251304626464844, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007808208465576172, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 36, 31, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004055023193359375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007460117340087891, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009009838104248047, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 36, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0435028076171875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 35, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 36, 30, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008869171142578125, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 34, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 37, 34, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006880760192871094, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005205869674682617, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 34, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009779930114746094, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 37, 30, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.000659942626953125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 30, 31, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0051310062408447266, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004808902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35, 37, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008769035339355469, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0064051151275634766, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30, 37, 35, 31, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0040090084075927734, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.13426518440246582, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008840560913085938, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30, 36, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008041858673095703, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 33, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008969306945800781, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 35, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006589889526367188, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004887104034423828, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 37, 34, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006909370422363281, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007941722869873047, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004506111145019531, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 36, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.get_title()\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 37, 35, 30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 33, 34, 35, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005629777908325195, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008699893951416016, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005312919616699219, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005337238311767578, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 33, 30, 35, 34, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008497238159179688, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 36, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 35, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007710456848144531, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 37, 35, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title('Cumulative Sum Plot')\n    ax.grid(True)\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 31, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008351802825927734, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 30, 34, 31, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006279945373535156, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 36, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006761550903320312, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 31, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.000644683837890625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 36, 30, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004179954528808594, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 30, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=False)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 37, 36, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004018068313598633, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 34, 33, 37, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 33, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 36, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.get_title()\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006761550903320312, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = list(np.cumsum(sorted_list))\n    # Plotting the line chart\n    ax = plt.figure(figsize=(6, 5)).add_subplot(1, 1, 1)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 37, 35, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006673336029052734, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007941722869873047, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004808902740478516, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004018068313598633, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004319906234741211, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 31, 30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007259845733642578, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 33, 31, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004725933074951172, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003940105438232422, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 34, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30, 33, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 35, 33, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_xlabel('n')\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006909370422363281, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0]**2 + x[1]**2)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008471012115478516, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0050008296966552734, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 33, 37, 36, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 30, 34, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.00151824951171875, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0051310062408447266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, label=\"Sorted List\")\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 36, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.003790140151977539, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 36, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = sorted_list[:]\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007388591766357422, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33, 35, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006537437438964844, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009541511535644531, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sin(x[0] + x[1]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0064051151275634766, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002851247787475586, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 31, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008187294006347656, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35, 37, 34, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006239414215087891, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 31, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015327930450439453, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 37, 36, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.03373575210571289, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 35, 31, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005246877670288086, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x))  # sort the list based on the degree value of its elements\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004228115081787109, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 33, 35, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 36, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008137226104736328, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 36, 30, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 36, 31, 33, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 31, 35, 34, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007328987121582031, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009541511535644531, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006054878234863281, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.13258600234985352, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 36, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 35, 30, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[0])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 30, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35, 33, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_xlabel('n')\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007870197296142578, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007927417755126953, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 30, 34, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 31, 36, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 30, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007801055908203125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x[0]))\n    cumsum = list(itertools.accumulate(sorted_list))\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 31, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0009541511535644531, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot(111)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.002753019332885742, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 30, 35, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel('Time')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 31, 34, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 33, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.sqrt(x[0] ** 2 + x[1] ** 2))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 33, 36, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007140636444091797, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x['degree'])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.006909847259521484, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [31, 35, 34, 36, 33, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title('Cumulative Sum Plot')\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 37, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062100887298583984, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input.copy()\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 37, 33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006909370422363281, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(f\"Cumulative Sum Plot for {list_input}\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.000885009765625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel('Cumulative Sum')\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007898807525634766, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0037109851837158203, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008509159088134766, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 30, 36, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007529258728027344, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34, 37, 36], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.get_title()\n    ax.grid(True)\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008511543273925781, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 33, 36, 31, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.015424013137817383, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: abs(x), reverse=True)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007681846618652344, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Iteration\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0012359619140625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35, 36, 37, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x.degree)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.get_title()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0041997432708740234, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 31, 36, 34, 35], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 37, 35, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.axes(dpi=100)\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.grid()\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 31, 36, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008187294006347656, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 31, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.004286050796508789, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 33, 37, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.subplots()[1]\n    ax.set_xlabel('n')\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 33, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Element\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006580352783203125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 36, 37, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title('Cumulative Sum Plot')\n    ax.set_xlabel(\"x\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0007410049438476562, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: math.degrees(x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.005292177200317383, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 33, 35, 30, 37], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = list_input[:]\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.gca()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0006229877471923828, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 31, 30, 34], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum, linestyle='-')\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 31], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input)\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Value\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0008509159088134766, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: (math.degrees(x), x))\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.figure().add_subplot()\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.13426518440246582, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef task_func(list_input):\n    \"\"\"\n    Sort the given list in ascending order based on the degree value of its elements, calculate the cumulative sum of \n    the sorted list, and draw a line chart of the cumulative sum.\n\n    Parameters:\n    list_input (list): The list to be sorted.\n\n    Returns:\n    tuple: A tuple containing:\n           - numpy array: The cumulative sum of the sorted list.\n           - matplotlib.axes._axes.Axes: The Axes object of the plotted line chart.\n\n    Requirements:\n    - math\n    - numpy\n    - matplotlib.pyplot\n\n    Example:\n    >>> cumsum, ax = task_func([10, 20, 30])\n    >>> print(cumsum)\n    [10 30 60]\n    >>> ax.get_title()\n    'Cumulative Sum Plot'\n    \"\"\"\n    sorted_list = sorted(list_input, key=lambda x: x[1])\n    cumsum = np.cumsum(sorted_list)\n    # Plotting the line chart\n    ax = plt.plot(cumsum)[0].axes\n    ax.set_title(\"Cumulative Sum Plot\")\n    ax.set_xlabel(\"Index\")\n    ax.set_ylabel(\"Cumulative Sum\")\n    return cumsum, ax", "compilation_passed": true, "time": 0.0062601566314697266, "tests_passed": false, "error": "TypeError"}}
