{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 39, 38, 45, 36, 34, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 42, 33, 35, 34, 36, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 45, 42, 34, 40, 41, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [41, 45, 33, 36, 34, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 41, 33, 36, 37, 44, 45, 40, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 45, 42, 34, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 42, 36, 37, 35, 41, 45, 44, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 44, 42, 33, 37, 40, 35, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0021440982818603516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38, 39, 42, 34, 40, 33, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 35, 41, 36, 38, 42, 37, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 41, 42, 35, 36, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 41, 40, 34, 39, 35, 44, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [45, 33, 37, 34, 36, 42, 38, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 35, 42, 44, 41, 33, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [39, 35, 45, 44, 40, 36, 34, 38, 37, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 39, 36, 41, 45, 38, 37, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 39, 44, 42, 41, 33, 45, 34, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 37, 35, 44, 34, 38, 41, 39, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 37, 38, 45, 42, 41, 35, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 42, 35, 44, 40, 39, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 42, 44, 40, 33, 36, 37, 45, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [45, 41, 34, 40, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [33, 36, 42, 40, 34, 38, 39, 41, 37, 44, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 44, 37, 41, 40, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [35, 45, 42, 36, 41, 40, 38, 44, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 41, 40, 44, 34, 35, 39, 42, 38, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [35, 34, 41, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 33, 45, 42, 44, 34, 36, 39, 40, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [45, 35, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 41, 34, 33, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 45, 42, 39, 38, 44, 41, 33, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 38, 34, 41, 42, 45, 36, 39, 35, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 38, 41, 33, 44, 45, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 37, 35, 44, 45, 34, 33, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 34, 39, 33, 37, 45, 42, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 38, 37, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 36, 42, 33, 45, 41, 35, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 41, 45, 42, 34, 38, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [38, 41, 45, 34, 36, 44, 35, 39, 37, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [38, 40, 35, 33, 45, 39, 36, 34, 41, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 44, 40, 42, 34, 41, 45, 33, 38, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 44, 38, 33, 34, 37, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004297018051147461, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 44, 41, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36, 38, 33, 44, 34, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0015671253204345703, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [37, 33, 34, 35, 45, 40, 39, 42, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 35, 33, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 40, 39, 41, 34, 38, 35, 44, 36, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 44, 39, 36, 38, 40, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33, 36, 41, 42, 44, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 39, 35, 45, 38, 36, 37, 44, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [35, 42, 37, 33, 41, 36, 34, 38, 39, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 37, 33, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [45, 44, 36, 38, 39, 33, 42, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 44, 35, 33, 42, 40, 45, 41, 36, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 41, 44, 40, 33, 35, 42, 34, 39, 45, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 38, 35, 45, 40, 34, 39, 42, 44, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 42, 36, 35, 37, 41, 38, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 39, 34, 38, 33, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [38, 44, 40, 45, 37, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 41, 34, 39, 33, 36, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 38, 45, 35, 39, 44, 37, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [44, 33, 45, 42, 38, 40, 39, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 44, 42, 35, 41, 38, 45, 36, 40, 33, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 37, 35, 39, 34, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [40, 45, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [44, 42, 45, 41, 36, 34, 33, 39, 35, 38, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34, 38, 41, 33, 39, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 33, 40, 45, 37, 38, 42, 34, 39, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [45, 37, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 42, 38, 40, 36, 39, 41, 44, 37, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 37, 41, 45, 33, 36, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 38, 35, 42, 44, 34, 41, 40, 39, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [45, 38, 39, 40, 33, 37, 41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 36, 35, 44, 39, 42, 34, 38, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 44, 36, 39, 45, 38, 33, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 33, 38, 35, 34, 37, 44, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01007699966430664, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 35, 40, 42, 44, 38, 36, 34, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 34, 42, 41, 36, 35, 38, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 45, 33, 44, 41, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 33, 35, 40, 38, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.002039670944213867, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01007699966430664, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.001992940902709961, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 38, 44, 35, 42, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 42, 37, 39, 44, 38, 34, 45, 40, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 44, 35, 41, 37, 45, 42, 34, 38, 36, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 36, 40, 45, 37, 35, 38, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 34, 36, 44, 41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 44, 39, 33, 38, 36, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004643917083740234, "tests_passed": true, "error": null}}
{"selected_lines": [42, 45, 37, 44, 40, 34, 41, 36, 33, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 45, 41, 34, 38, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0073070526123046875, "tests_passed": true, "error": null}}
{"selected_lines": [45, 41, 39, 42, 37, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 41, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 33, 36, 35, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004389047622680664, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 34, 39, 40, 45, 44, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 41, 40, 36, 35, 39, 38, 37, 34, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 35, 41, 38, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 44, 42, 40, 45, 35, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 37, 42, 41, 38, 44, 36, 34, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [41, 37, 44, 33, 38, 42, 39, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 41, 34, 44, 37, 33, 40, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 35, 33, 40, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 45, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 45, 34, 39, 40, 44, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004441261291503906, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 39, 35, 42, 44, 45, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 34, 39, 37, 44, 41, 33, 45, 40, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 37, 34, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0018129348754882812, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 36, 41, 42, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [45, 44, 34, 35, 38, 41, 36, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0073070526123046875, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 33, 42, 35, 39, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 42, 37, 45, 38, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 45, 44, 39, 42, 35, 37, 38, 33, 41, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 38, 36, 33, 42, 44, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 34, 40, 45, 42, 36, 41, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 38, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.007142066955566406, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [33, 37, 42, 36, 34, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 34, 38, 33, 37, 44, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 38, 41, 44, 36, 33, 42, 34, 45, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [39, 34, 33, 35, 40, 38, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.002039670944213867, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [40, 37, 41, 39, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 34, 38, 45, 37, 36, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 36, 34, 45, 40, 38, 42, 41, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 38, 41, 37, 45, 40, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 37, 38, 42, 36, 39, 33, 44, 35, 40, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 36, 45, 37, 44, 42, 35, 41, 39, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 42, 45, 37, 33, 44, 40, 41, 34, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 42, 34, 39, 44, 36, 41, 40, 33, 35, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 45, 35, 42, 44, 39, 36, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [42, 41, 44, 33, 39, 37, 36, 35, 34, 40, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 34, 44, 39, 40, 37, 36, 38, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 34, 42, 44, 36, 35, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 38, 40, 39, 36, 45, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [36, 34, 42, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [33, 40, 42, 37, 38, 39, 34, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 44, 45, 42, 40, 35, 34, 37, 36, 39, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 40, 42, 36, 44, 37, 33, 39, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 41, 44, 40, 37, 42, 34, 35, 39, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 42, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [42, 45, 34, 36, 41, 37, 33, 40, 44, 35, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 44, 41, 37, 38, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 42, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 41, 34, 40, 44, 35, 36, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 45, 35, 44, 42, 39, 41, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 44, 34, 35, 41, 40, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 41, 42, 40, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 44, 38, 35, 41, 45, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 34, 45, 35, 44, 37, 42, 41, 40, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 37, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [40, 44, 37, 38, 34, 41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 35, 34, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0073070526123046875, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 38, 39, 33, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34, 44, 42, 35, 38, 40, 36, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 34, 41, 37, 33, 36, 42, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 45, 41, 36, 35, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 45, 44, 37, 39, 34, 40, 42, 41, 35, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 45, 40, 38, 35, 42, 36, 41, 44, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 40, 42, 33, 39, 41, 35, 44, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 42, 36, 45, 35, 41, 33, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 44, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01007699966430664, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 34, 37, 44, 38, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 39, 41, 40, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 39, 45, 34, 38, 41, 35, 40, 44, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 42, 33, 44, 34, 41, 36, 35, 45, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 37, 35, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 41, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 45, 44, 42, 41, 35, 39, 40, 38, 36, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 42, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 40, 39, 33, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [37, 45, 42, 41, 33, 35, 34, 40, 39, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 45, 40, 41, 42, 37, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [45, 44, 37, 36, 41, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 37, 40, 34, 38, 42, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 33, 41, 34, 45, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 36, 44, 37, 41, 39, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 36, 45, 37, 42, 44, 34, 40, 38, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 44, 35, 45, 42, 37, 39, 40, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 42, 35, 44, 40, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 37, 36, 45, 33, 41, 35, 42, 34, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 35, 38, 41, 40, 39, 36, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 36, 33, 35, 41, 37, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 45, 41, 35, 34, 42, 40, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41, 35, 45, 34, 33, 40, 44, 36, 37, 39, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [40, 39, 45, 33, 35, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 41, 42, 34, 40, 36, 37, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 39, 44, 41, 42, 35, 37, 36, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 42, 38, 36, 37, 33, 34, 44, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 33, 42, 34, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 41, 36, 38, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37, 40, 36, 38, 33, 44, 34, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0015671253204345703, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36, 44, 39, 45, 41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33, 35, 34, 41, 40, 36, 44, 37, 45, 39, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 44, 34, 42, 39, 45, 33, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [44, 42, 37, 39, 36, 35, 38, 41, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [44, 34, 38, 39, 37, 35, 40, 42, 33, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 41, 37, 44, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 41, 34, 45, 37, 33, 36, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0073070526123046875, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 34, 33, 35, 36, 40, 37, 45, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 44, 37, 45, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 40, 45, 42, 36, 41, 33, 34, 38, 37, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [45, 41, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 42, 33, 41, 39, 37, 45, 36, 40, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 44, 39, 45, 36, 40, 38, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009972810745239258, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 33, 37, 42, 38, 45, 44, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 33, 36, 35, 45, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 36, 37, 40, 34, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 33, 40, 38, 35, 36, 44, 41, 42, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 36, 40, 42, 33, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 42, 34, 37, 39, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 42, 39, 36, 44, 35, 34, 40, 33, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 44, 40, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0017800331115722656, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 37, 42, 34, 45, 44, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.007142066955566406, "tests_passed": true, "error": null}}
{"selected_lines": [42, 35, 39, 33, 36, 41, 34, 37, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 42, 40, 38, 35, 34, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 45, 39, 38, 35, 42, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 42, 36, 34, 45, 37, 40, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 41, 42, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [35, 44, 36, 37, 34, 39, 45, 33, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 44, 40, 36, 39, 45, 37, 33, 38, 42, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 36, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 39, 35, 37, 44, 41, 42, 45, 38, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 34, 41, 40, 39, 37, 44, 36, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 44, 34, 37, 42, 36, 35, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 38, 37, 39, 36, 33, 35, 41, 45, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 35, 42, 36, 45, 33, 38, 40, 41, 37, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [44, 35, 38, 36, 40, 42, 45, 39, 37, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 36, 44, 45, 38, 35, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33, 35, 44, 41, 38, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 39, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 41, 33, 38, 35, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 42, 36, 38, 44, 40, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 33, 42, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 34, 40, 42, 35, 44, 41, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [41, 36, 33, 44, 38, 40, 34, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 44, 35, 38, 34, 41, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 44, 40, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 39, 35, 45, 34, 36, 41, 42, 44, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [42, 35, 36, 38, 37, 45, 39, 41, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 34, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [37, 34, 39, 44, 36, 40, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 44, 33, 34, 45, 38, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 42, 44, 39, 38, 35, 34, 41, 36, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 41, 33, 40, 34, 42, 38, 39, 35, 36, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 41, 37, 36, 40, 33, 44, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 45, 39, 41, 38, 40, 44, 33, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 44, 33, 39, 42, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 40, 41, 34, 35, 33, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [44, 45, 42, 38, 36, 41, 37, 39, 40, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 37, 40, 42, 36, 33, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.0002510547637939453, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [44, 37, 33, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 42, 45, 40, 37, 33, 34, 36, 35, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 39, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 44, 42, 39, 36, 35, 37, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 39, 38, 34, 45, 37, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 42, 41, 39, 44, 40, 37, 45, 35, 36, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 40, 37, 41, 44, 35, 42, 36, 33, 38, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.007142066955566406, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [42, 41, 39, 33, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 33, 35, 40, 38, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.002039670944213867, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [36, 39, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 41, 34, 33, 38, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 38, 45, 35, 42, 36, 33, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 40, 35, 42, 41, 34, 36, 44, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01007699966430664, "tests_passed": true, "error": null}}
{"selected_lines": [44, 42, 35, 41, 37, 40, 36, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 36, 44, 34, 41, 35, 42, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 34, 36, 35, 39, 37, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 36, 39, 34, 40, 45, 35, 37, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 38, 45, 33, 37, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 44, 45, 35, 39, 36, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 37, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 33, 34, 38, 37, 45, 39, 36, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 44, 38, 33, 34, 37, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004297018051147461, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 37, 35, 39, 33, 40, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 44, 39, 34, 38, 42, 41, 33, 37, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 44, 34, 45, 33, 39, 40, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 38, 37, 41, 34, 40, 42, 44, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 37, 35, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004397153854370117, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 34, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 44, 34, 45, 41, 38, 33, 35, 39, 40, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 33, 41, 44, 37, 39, 38, 36, 45, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 44, 38, 33, 34, 37, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004297018051147461, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 36, 35, 44, 33, 40, 45, 37, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 35, 36, 39, 37, 38, 33, 42, 41, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 41, 42, 36, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 42, 35, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 38, 45, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34, 38, 35, 44, 39, 36, 37, 42, 41, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34, 39, 35, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [35, 33, 40, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 33, 37, 41, 39, 36, 40, 44, 35, 38, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 44, 39, 41, 38, 37, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [33, 45, 41, 44, 35, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 45, 33, 44, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 37, 39, 45, 41, 33, 36, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 42, 35, 36, 44, 39, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 45, 44, 41, 36, 34, 40, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 34, 45, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 44, 41, 40, 42, 39, 33, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 36, 44, 38, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 38, 39, 34, 37, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 40, 44, 38, 35, 37, 39, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34, 36, 45, 42, 37, 44, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 39, 33, 34, 36, 44, 38, 42, 40, 37, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 41, 33, 40, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 42, 36, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 38, 40, 42, 36, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 38, 41, 34, 36, 40, 35, 45, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 33, 37, 38, 44, 42, 45, 36, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01007699966430664, "tests_passed": true, "error": null}}
{"selected_lines": [34, 44, 42, 35, 41, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 41, 34, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42, 33, 36, 44, 39, 34, 37, 45, 35, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [39, 41, 45, 44, 37, 34, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 45, 38, 42, 34, 44, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 38, 39, 40, 36, 44, 33, 45, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 41, 37, 39, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 37, 39, 44, 33, 45, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 44, 42, 36, 45, 37, 34, 33, 40, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 41, 42, 40, 45, 38, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 44, 34, 40, 41, 38, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009972810745239258, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 36, 40, 45, 33, 35, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34, 36, 44, 42, 45, 37, 40, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 34, 44, 45, 39, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 41, 33, 37, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 39, 37, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [39, 45, 34, 44, 38, 42, 37, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [42, 40, 41, 36, 35, 37, 44, 33, 45, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 37, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 33, 34, 36, 41, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 42, 41, 45, 44, 35, 37, 34, 33, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 33, 40, 42, 38, 44, 35, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 45, 42, 34, 44, 33, 38, 37, 41, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 39, 38, 34, 45, 44, 40, 41, 35, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 34, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 40, 42, 37, 41, 45, 39, 44, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 36, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 45, 35, 38, 39, 33, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 38, 34, 42, 45, 39, 35, 33, 37, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 44, 40, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0017800331115722656, "tests_passed": true, "error": null}}
{"selected_lines": [36, 44, 33, 41, 45, 42, 34, 35, 40, 39, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 41, 33, 37, 44, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [45, 37, 39, 41, 34, 44, 38, 40, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.0002510547637939453, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 41, 42, 40, 34, 36, 33, 37, 44, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 39, 34, 35, 41, 33, 37, 42, 44, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 38, 42, 44, 41, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 42, 36, 40, 38, 35, 45, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 37, 36, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.001965045928955078, "tests_passed": true, "error": null}}
{"selected_lines": [41, 33, 38, 42, 40, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 38, 41, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0073070526123046875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 40, 41, 34, 42, 35, 44, 38, 45, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [37, 45, 36, 42, 40, 38, 44, 33, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 45, 33, 40, 35, 34, 41, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 42, 38, 33, 35, 45, 41, 40, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 42, 41, 33, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 39, 34, 36, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 45, 39, 36, 37, 33, 41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 44, 38, 36, 35, 42, 37, 45, 41, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 34, 33, 37, 40, 42, 38, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [45, 44, 35, 40, 33, 38, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 35, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 42, 41, 37, 34, 45, 38, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 41, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 39, 36, 38, 44, 45, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 45, 39, 42, 44, 37, 41, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [39, 44, 34, 36, 41, 33, 38, 42, 40, 45, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 45, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 33, 35, 40, 37, 44, 38, 34, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 42, 33, 41, 45, 40, 34, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 33, 34, 44, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 33, 40, 38, 35, 39, 45, 34, 42, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 33, 36, 45, 35, 44, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 34, 40, 35, 42, 37, 44, 33, 36, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 38, 41, 42, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [41, 34, 42, 35, 37, 33, 40, 44, 39, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [44, 45, 38, 33, 37, 42, 40, 41, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 40, 45, 33, 34, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 36, 35, 38, 40, 44, 41, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 38, 33, 37, 42, 36, 44, 40, 34, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [44, 34, 40, 45, 38, 36, 33, 39, 41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 35, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 44, 41, 33, 38, 37, 35, 45, 36, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 42, 37, 38, 39, 34, 35, 36, 41, 45, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 39, 45, 36, 33, 38, 40, 44, 37, 34, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 39, 45, 41, 44, 34, 38, 33, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 37, 42, 45, 33, 39, 36, 44, 41, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 35, 42, 45, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 40, 37, 35, 42, 34, 36, 45, 39, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 45, 38, 36, 39, 35, 33, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 36, 41, 35, 42, 44, 45, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [42, 38, 33, 36, 40, 37, 35, 39, 41, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 40, 45, 33, 38, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 42, 45, 37, 41, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 37, 38, 39, 44, 36, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 38, 45, 33, 37, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 44, 37, 38, 45, 34, 36, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 44, 36, 37, 39, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 41, 35, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 41, 40, 35, 33, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34, 37, 36, 45, 38, 40, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 45, 33, 38, 41, 42, 39, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37, 38, 45, 41, 40, 39, 35, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 41, 40, 39, 42, 33, 34, 35, 36, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 44, 39, 36, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 44, 33, 42, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 33, 36, 35, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004389047622680664, "tests_passed": true, "error": null}}
{"selected_lines": [44, 39, 45, 35, 37, 33, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 45, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 35, 45, 39, 41, 42, 34, 44, 38, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 42, 38, 34, 41, 39, 36, 45, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [44, 35, 38, 42, 39, 41, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 39, 44, 37, 36, 41, 40, 38, 33, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01007699966430664, "tests_passed": true, "error": null}}
{"selected_lines": [44, 42, 33, 36, 37, 39, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 34, 44, 37, 40, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 39, 44, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 45, 40, 44, 36, 39, 37, 33, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 39, 42, 36, 34, 33, 37, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 44, 38, 34, 33, 45, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 41, 39, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 42, 38, 35, 44, 33, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 44, 35, 36, 34, 39, 45, 41, 37, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 33, 41, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 45, 35, 34, 42, 38, 39, 41, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 34, 36, 45, 44, 41, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 41, 33, 42, 34, 36, 45, 37, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 44, 38, 41, 42, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 33, 38, 37, 40, 35, 41, 34, 45, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 42, 39, 41, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [41, 45, 34, 44, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 37, 36, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.001965045928955078, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 41, 35, 42, 33, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 40, 42, 41, 39, 33, 36, 38, 35, 45, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [44, 40, 38, 41, 35, 45, 33, 34, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 40, 35, 44, 33, 39, 42, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 41, 45, 44, 39, 35, 40, 33, 36, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 34, 37, 39, 45, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [33, 45, 40, 38, 37, 44, 35, 39, 36, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 34, 35, 42, 44, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 42, 41, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 35, 38, 36, 44, 34, 41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 34, 33, 41, 45, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 42, 36, 37, 45, 38, 35, 33, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [45, 36, 34, 38, 42, 33, 41, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 36, 44, 38, 39, 37, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 44, 41, 36, 45, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 33, 41, 34, 39, 42, 44, 38, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 45, 42, 39, 41, 38, 37, 36, 40, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 41, 36, 44, 42, 38, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 45, 44, 40, 37, 39, 41, 34, 36, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 39, 35, 44, 36, 37, 42, 45, 33, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 45, 35, 42, 40, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 39, 41, 37, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 38, 42, 39, 45, 41, 37, 40, 33, 36, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 44, 41, 33, 37, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [34, 42, 35, 37, 40, 38, 44, 36, 41, 39, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 44, 38, 45, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 44, 35, 40, 38, 36, 41, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 44, 37, 41, 35, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 41, 33, 42, 34, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 37, 36, 40, 34, 33, 39, 41, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42, 33, 41, 36, 40, 44, 35, 45, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 37, 34, 36, 38, 44, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 41, 38, 36, 33, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0073070526123046875, "tests_passed": true, "error": null}}
{"selected_lines": [45, 38, 37, 39, 33, 42, 40, 34, 36, 41, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 39, 34, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 36, 39, 42, 38, 33, 40, 35, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 34, 42, 33, 41, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 35, 45, 36, 38, 44, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 42, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 44, 45, 42, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 45, 39, 38, 41, 35, 34, 36, 44, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 38, 39, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 44, 35, 38, 42, 39, 41, 36, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36, 41, 45, 37, 35, 39, 42, 33, 44, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 35, 42, 39, 44, 36, 34, 37, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [45, 44, 36, 41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 34, 42, 45, 36, 35, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 45, 36, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 44, 39, 37, 35, 41, 34, 36, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 38, 39, 37, 36, 42, 41, 40, 45, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 38, 45, 41, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 45, 33, 41, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 36, 38, 45, 41, 42, 40, 44, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [45, 36, 34, 37, 41, 33, 40, 38, 35, 39, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 42, 35, 37, 33, 44, 39, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 35, 34, 45, 41, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009972810745239258, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 35, 39, 34, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 45, 36, 35, 39, 37, 41, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 40, 34, 41, 38, 37, 39, 36, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [39, 36, 38, 33, 45, 40, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 42, 39, 33, 40, 36, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [40, 36, 37, 41, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01007699966430664, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 39, 45, 33, 44, 38, 36, 41, 37, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 34, 40, 38, 41, 44, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 44, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 37, 41, 45, 36, 44, 34, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 41, 37, 45, 39, 42, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 42, 34, 36, 35, 41, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 44, 37, 42, 41, 36, 35, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [41, 37, 36, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 34, 41, 36, 42, 39, 38, 33, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [45, 34, 42, 33, 37, 35, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 38, 34, 45, 42, 39, 35, 36, 44, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 37, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 38, 35, 33, 37, 42, 45, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 41, 45, 39, 34, 37, 44, 38, 42, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [34, 41, 39, 45, 44, 33, 42, 36, 35, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 41, 33, 38, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 33, 35, 41, 36, 34, 42, 39, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [38, 45, 37, 35, 36, 42, 41, 44, 34, 39, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 33, 39, 37, 45, 34, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 33, 44, 37, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 45, 35, 40, 42, 38, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [44, 40, 37, 42, 41, 33, 38, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 38, 40, 34, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 37, 39, 42, 45, 40, 44, 35, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 38, 36, 40, 45, 37, 44, 33, 34, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 33, 34, 41, 37, 35, 42, 40, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 33, 41, 37, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 38, 42, 37, 39, 36, 44, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [45, 33, 41, 39, 37, 40, 38, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 34, 45, 33, 42, 38, 37, 40, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 44, 35, 41, 40, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 45, 42, 37, 33, 40, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 37, 34, 39, 35, 38, 44, 33, 40, 36, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 39, 37, 36, 41, 34, 35, 33, 38, 40, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 42, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 45, 39, 37, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 45, 37, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.001992940902709961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 39, 34, 36, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 35, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 39, 38, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 45, 40, 36, 41, 44, 33, 37, 35, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 34, 33, 42, 44, 36, 35, 45, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 45, 42, 34, 35, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [42, 41, 45, 40, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 42, 37, 39, 40, 38, 35, 36, 34, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 39, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004395008087158203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 44, 39, 33, 42, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [44, 42, 33, 40, 39, 38, 36, 41, 34, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [40, 45, 42, 33, 41, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 41, 37, 38, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 45, 33, 36, 38, 42, 41, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004260063171386719, "tests_passed": true, "error": null}}
{"selected_lines": [42, 33, 36, 40, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [42, 39, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 45, 42, 39, 44, 38, 34, 36, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.01007699966430664, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 38, 41, 39, 44, 35, 33, 45, 36, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 38, 45, 34, 33, 42, 44, 41, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 42, 41, 33, 37, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 39, 42, 34, 36, 45, 40, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 34, 45, 42, 38, 35, 39, 36, 37, 33, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 44, 45, 42, 41, 37, 33, 34, 36, 39, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 34, 40, 37, 41, 36, 44, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [45, 34, 39, 37, 44, 40, 33, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 38, 33, 45, 41, 40, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 42, 34, 41, 44, 37, 40, 45, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 44, 33, 45, 34, 40, 42, 38, 41, 36, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [45, 42, 38, 44, 36, 35, 33, 41, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file) is not None:\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 39, 41, 44, 38, 37, 40, 42, 34, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 35, 39, 45, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 41, 35, 33, 40, 37, 45, 44, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 44, 35, 38, 33, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 41, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 45, 35, 44, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [44, 35, 38, 39, 34, 40, 45, 41, 36, 42, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 41, 33, 36, 42, 44, 45, 38, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [41, 35, 33, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 33, 42, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 39, 35, 38, 41, 37, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 45, 36, 44, 35, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [44, 38, 37, 35, 34, 33, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 40, 34, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 41, 34, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 45, 34, 33, 44, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36, 42, 45, 44, 37, 40, 41, 38, 39, 33, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34, 38, 36, 37, 35, 40, 42, 45, 41, 33, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [33, 39, 40, 37, 42, 38, 41, 36, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 40, 37, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 42, 41, 34, 35, 38, 45, 44, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 45, 41, 42, 39, 33, 40, 38, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 45, 38, 44, 36, 39, 40, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 37, 36, 33, 35, 40, 45, 41, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 45, 42, 33, 44, 39, 34, 38, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 44, 45, 35, 42, 36, 33, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 42, 35, 40, 37, 44, 45, 41, 34, 39, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [41, 44, 35, 38, 45, 39, 36, 37, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 42, 34, 35, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 45, 39, 40, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 33, 38, 44, 37, 42, 36, 34, 35, 39, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 38, 44, 40, 45, 42, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 37, 35, 39, 33, 36, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 39, 45, 36, 44, 34, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), target_directory)\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [33, 34, 45, 40, 44, 39, 41, 36, 35, 38, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 33, 45, 34, 44, 36, 38, 40, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 45, 35, 39, 36, 42, 37, 40, 41, 38, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [41, 39, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 44, 40, 35, 41, 42, 36, 34, 45, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 34, 44, 41, 33, 45, 42, 38, 40, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 37, 36, 39, 38, 33, 45, 35, 41, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 39, 44, 37, 38, 35, 45, 33, 34, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_ in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 40, 34, 33, 35, 44, 36, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [42, 36, 41, 37, 40, 38, 39, 35, 44, 33, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [38, 34, 33, 36, 35, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004389047622680664, "tests_passed": true, "error": null}}
{"selected_lines": [37, 44, 39, 34, 38, 36, 35, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 44, 37, 38, 45, 35, 34, 39, 40, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 39, 36, 40, 45, 44, 38, 33, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009933948516845703, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 44, 40, 34, 37, 45, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 34, 33, 40, 41, 38, 35, 45, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 45, 36, 42, 39, 40, 37, 34, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 45, 41, 37, 33, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 33, 37, 45, 38, 41, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [35, 44, 42, 45, 37, 36, 41, 38, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 45, 39, 42, 36, 35, 34, 41, 44, 37, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 39, 36, 38, 33, 40, 45, 44, 42, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010493755340576172, "tests_passed": true, "error": null}}
{"selected_lines": [33, 41, 35, 37, 34, 44, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36, 45, 44, 38, 40, 35, 34, 41, 37, 33, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [45, 42, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 44, 40, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0017800331115722656, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 37, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 34, 38, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 41, 35, 36, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [44, 38, 39, 36, 37, 41, 35, 42, 34, 40, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 45, 44, 38, 42, 35, 36, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 42, 41, 37, 34, 45, 33, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 42, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": false, "time": 0.000263214111328125, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [36, 33, 42, 35, 38, 37, 34, 45, 44, 41, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.011770248413085938, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 42, 41, 37, 45, 34, 39, 36, 44, 40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 45, 37, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 42, 44, 35, 38, 45, 37, 39, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 45, 41, 34, 33, 42, 37, 40, 38, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.007142066955566406, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 38, 40, 42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 45, 39, 41, 34, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [38, 34, 36, 41, 39, 45, 44, 37, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 37, 33, 42, 40, 35, 45, 34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 33, 35, 40, 44, 39, 36, 37, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 33, 35, 34, 36, 44, 39, 45, 41, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.00712275505065918, "tests_passed": true, "error": null}}
{"selected_lines": [39, 45, 40, 44, 41, 37, 33, 34, 42, 38, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 39, 34, 44, 33, 42, 36, 35, 45, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 42, 35, 45, 39, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.009571075439453125, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
{"selected_lines": [36, 44, 34, 37, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.004292011260986328, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 42, 45, 37, 41, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 34, 41], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 37, 35, 33, 44, 42, 34, 41, 45, 39], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 42, 36, 34, 41, 45, 39, 33, 44, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 35, 39, 38, 37, 41, 45, 34, 33, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 40, 34, 39, 44, 41, 42, 38, 33, 35, 37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 42, 40, 39, 35], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 44, 42, 40, 33, 39, 36, 41, 35, 38], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 35, 42, 37, 34, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 40, 39, 45, 41, 34, 36, 44, 38, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 42, 41, 37, 35, 40, 34, 39, 45, 38, 36], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if os.path.exists(source_directory) and os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.match(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 42, 34, 33, 36, 45, 35, 44], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.match(pattern, file):\n                shutil.move(\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.012517929077148438, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 33, 35, 44, 38, 45], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 45, 38, 41, 37, 35, 39, 33], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return moved_files_count\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file_name in files:\n            if re.search(pattern, file):\n                shutil.move(os.path.join(root, file), os.path.join(target_directory, file))\n                    os.path.join(root, file),\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import os\nimport re\nimport shutil\n\n\ndef task_func(source_directory: str, target_directory: str, pattern: str = r\"\\d{4}\") -> int:\n    \"\"\"\n    Moves files matching a specific regex pattern from a source directory to a target directory.\n\n    Parameters:\n    - source_directory (str): Path of the source directory from which files will be moved.\n    - target_directory (str): Path of the target directory to which files will be moved.\n    - pattern (str): Regex pattern to match filenames.\n                     Defaults to r'\\\\d{4}' to match filenames containing four contiguous digits.\n\n    Returns:\n    - int: The number of files successfully moved.\n\n    Requirements:\n    - os\n    - re\n    - shutil\n\n    Note:\n    - If source_directory does not exist or is not a directory, this function returns 0.\n    - If target_directory does not exist, this function will create it.\n\n    Examples:\n    >>> os.listdir('/path/to/source')\n    ['1000.txt', '1001.txt', '1002.txt', 'not_a_match.txt']\n    >>> task_func('/path/to/source', '/path/to/target')\n    3\n    \"\"\"\n    moved_files_count = 0\n    if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if re.search(pattern, file):\n                shutil.move(\n                    os.path.join(root, file), os.path.join(target_directory, file)\n                )\n                moved_files_count += 1\n    return moved_files_count", "compilation_passed": true, "time": 0.010477066040039062, "tests_passed": true, "error": null}}
