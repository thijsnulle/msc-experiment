{"selected_lines": [35, 34, 37, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"Input array must be non-empty and consist of sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11070108413696289, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty list of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13691496849060059, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1385669708251953, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty list of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13691496849060059, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1385669708251953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1053171157836914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty list of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13691496849060059, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1385669708251953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1053171157836914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Invalid input: The input must be a 2D list with sublists of length 5.\")\n    df = pd.DataFrame(array, index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13334894180297852, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty list of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13691496849060059, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1385669708251953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1053171157836914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Invalid input: The input must be a 2D list with sublists of length 5.\")\n    df = pd.DataFrame(array, index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13334894180297852, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, index=[i for i in range(len(array))])\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13550591468811035, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10720705986022949, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty list of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13691496849060059, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1385669708251953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1053171157836914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Invalid input: The input must be a 2D list with sublists of length 5.\")\n    df = pd.DataFrame(array, index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13334894180297852, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, index=[i for i in range(len(array))])\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13550591468811035, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10720705986022949, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"Input array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.10533785820007324, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty list of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13691496849060059, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1385669708251953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1053171157836914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Invalid input: The input must be a 2D list with sublists of length 5.\")\n    df = pd.DataFrame(array, index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13334894180297852, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, index=[i for i in range(len(array))])\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13550591468811035, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10720705986022949, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"Input array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.10533785820007324, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be a 2D list of length 5 and non-empty.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, fmt=\".2f\", cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.06814193725585938, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty list of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13691496849060059, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1385669708251953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1053171157836914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Invalid input: The input must be a 2D list with sublists of length 5.\")\n    df = pd.DataFrame(array, index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13334894180297852, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, index=[i for i in range(len(array))])\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13550591468811035, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10720705986022949, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"Input array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.10533785820007324, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be a 2D list of length 5 and non-empty.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, fmt=\".2f\", cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.06814193725585938, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13883328437805176, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(row) == len(COLUMNS) for row in array):\n        raise ValueError(\"The input array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10332798957824707, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty list of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13691496849060059, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1385669708251953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1053171157836914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Invalid input: The input must be a 2D list with sublists of length 5.\")\n    df = pd.DataFrame(array, index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13334894180297852, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, index=[i for i in range(len(array))])\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13550591468811035, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10720705986022949, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"Input array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.10533785820007324, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be a 2D list of length 5 and non-empty.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, fmt=\".2f\", cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.06814193725585938, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13883328437805176, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(row) == len(COLUMNS) for row in array):\n        raise ValueError(\"The input array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10332798957824707, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1256577968597412, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.1111602783203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 39, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array) != 5:\n        raise ValueError(\"Invalid input. Must be a 2D list of length 5.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='RdBu')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.09842991828918457, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not len(array[0]):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid input.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13786697387695312, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array and all(len(row) == 5 for row in array):\n        raise ValueError(\"Input must be a non-empty 2D list with sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10530591011047363, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": false, "time": 0.00016689300537109375, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [38, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10589122772216797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or any([len(sublist) != 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.10733795166015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or len(array[0]) != 5:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"seismic\")\n    return df, heatmap", "compilation_passed": true, "time": 0.10180997848510742, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.4549551010131836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 34, 39, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.12399601936340332, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, vmin=-1, vmax=1, cmap='coolwarm', fmt='.2f', linewidths=0.5, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10476493835449219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"Reds\")\n    return df, heatmap", "compilation_passed": true, "time": 0.1378622055053711, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 38, 36, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or not all([len(sublist) == 5 for sublist in array]):\n        raise ValueError(\"array must be non-empty and each sublist must be of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')\n    return df, heatmap", "compilation_passed": true, "time": 0.10352396965026855, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 38, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"YlGnBu\", annot=True, xticklabels=COLUMNS, yticklabels=COLUMNS, square=True, fmt=\".2f\", linewidths=0.5)\n    return df, heatmap", "compilation_passed": true, "time": 0.12689995765686035, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12523794174194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 36, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array is invalid\")\n    df = pd.DataFrame([COLUMNS] * len(array), columns=COLUMNS, index=range(len(array)))\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='coolwarm', annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.45273900032043457, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.09996581077575684, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [37, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty and sublists of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 36, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"Invalid array.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.12829113006591797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Invalid input: Please provide a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10235905647277832, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13460397720336914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.13408684730529785, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(sublist) == 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10254192352294922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13741588592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"Input array is empty or contains sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10215592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input must be a non-empty list of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13691496849060059, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"Reds\", annot=True, cbar_kws={\"label\": \"Correlation\"}, vmin=-1, vmax=1, square=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1385669708251953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 35, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0 or len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1053171157836914, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"Invalid input: The input must be a 2D list with sublists of length 5.\")\n    df = pd.DataFrame(array, index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13334894180297852, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, index=[i for i in range(len(array))])\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13550591468811035, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10720705986022949, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not len(array[0]):\n        raise ValueError(\"Input array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame([COLUMNS], index=[\"\"])\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Reds')\n    return df, heatmap", "compilation_passed": true, "time": 0.10533785820007324, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36, 39, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be a 2D list of length 5 and non-empty.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True, fmt=\".2f\", cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.06814193725585938, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Input array must not be empty or contain sublists of varying lengths.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.13883328437805176, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39, 34, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not all(len(row) == len(COLUMNS) for row in array):\n        raise ValueError(\"The input array must be a 2D list of length 5\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10332798957824707, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) == 0:\n        raise ValueError(\"The input list must not be empty and sublists must have length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1256577968597412, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 35, 34, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.10503387451171875, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap=\"coolwarm\", annot=True, square=True, fmt=\"\", cbar_kws={'label': 'correlation'})\n    return df, heatmap", "compilation_passed": true, "time": 0.13889718055725098, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array) != 0:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False, cbar_pos=\"right\", annot=True, fmt='')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr())\n    return df, heatmap", "compilation_passed": true, "time": 0.09828591346740723, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 39, 35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1420578956604004, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 34, 37], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if len(array[0]) != 5:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if array == [] or any([len(x) != 5 for x in array]):\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.11016106605529785, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"The input array must be a 2D list of length 5.\")\n    df = pd.DataFrame(array)\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='RdYlGn')\n    return df, heatmap", "compilation_passed": true, "time": 0.14008760452270508, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.16986918449401855, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if not array:\n        raise ValueError(\"array must be non-empty and all sublists must have a length of 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), cbar=False)\n    return df, heatmap", "compilation_passed": true, "time": 0.0663611888885498, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 34], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"Array must not be empty or have sublists of different length.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.1059880256652832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = ['A', 'B', 'C', 'D', 'E']\n    if not array or any(len(sublist) != 5 for sublist in array):\n        raise ValueError(\"The input array must be a 2D list of 5 lists of length 5.\")\n    df = pd.DataFrame(array, columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 38, 36], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\n\ndef task_func(array):\n    \"\"\"Generates a DataFrame and heatmap from a 2D list.\n\n    This function takes a 2D list and returns a pandas DataFrame and a seaborn heatmap\n    representing the correlation matrix of the DataFrame. Assumes sublists of length 5.\n    Also assumes DataFrame columns: 'A', 'B', 'C', 'D', 'E'.\n\n    Parameters:\n    - array (list of list of int): 2D list with sublists of length 5. Must not be empty.\n\n    Returns:\n    - DataFrame: Constructed from the input 2D list.\n    - heatmap: Seaborn heatmap of the DataFrame's correlation matrix.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Raises:\n    - ValueError: If the input array is empty or contains sublists of varying lengths.\n    \n    Example:\n    >>> df, ax = task_func([[1, 2, 3, 4, 5], [5, 4, 3, 2, 1]])\n    >>> df\n       A  B  C  D  E\n    0  1  2  3  4  5\n    1  5  4  3  2  1\n    >>> ax\n    <Axes: >\n    \"\"\"\n    COLUMNS = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    if len(array) == 0:\n        raise ValueError(\"The input array must be non-empty and of sublists of length 5.\")\n    df = pd.DataFrame([COLUMNS] * len(array), index=range(len(array)), columns=COLUMNS)\n    heatmap = sns.heatmap(df.corr(), annot=True)\n    return df, heatmap", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
