{"selected_lines": [33, 35, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title(\"Dataframe Search Results\")\n    return (mask, ax)", "compilation_passed": true, "time": 0.28119707107543945, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.3204360008239746, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.275557279586792, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.2513158321380615, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.23470473289489746, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": false, "time": 0.0003101825714111328, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.2704000473022461, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.28734588623046875, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.283236026763916, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.31813812255859375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.22797226905822754, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.266002893447876, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.3150038719177246, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.3274407386779785, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.23776578903198242, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title('Heatmap: Target Value')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.25122785568237305, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.2818918228149414, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False)\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.33628225326538086, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6340327262878418, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.title('Task')\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.27252721786499023, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.5493731498718262, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.2776188850402832, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.2276778221130371, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.7670440673828125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.31482481956481934, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax", "compilation_passed": false, "time": 0.00046896934509277344, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 2.5995242595672607, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.2750399112701416, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.2516191005706787, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=90)\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6878859996795654, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.xticks([], [])\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask,\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return (mask, ax)", "compilation_passed": true, "time": 0.3123819828033447, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.24934601783752441, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask,\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.23338818550109863, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.3075850009918213, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.22464799880981445, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.2782711982727051, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.26904797554016113, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6319060325622559, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.30256199836730957, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.27840518951416016, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.25963497161865234, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.2926211357116699, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.2670722007751465, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.2257847785949707, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3186991214752197, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2309720516204834, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.2657473087310791, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.23258280754089355, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.28055286407470703, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.8429112434387207, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.9128439426422119, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.23590779304504395, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3016538619995117, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.title('Task')\n    return (mask, ax)", "compilation_passed": true, "time": 0.2821769714355469, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.2833678722381592, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.3173098564147949, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.2390599250793457, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.07873106002807617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.2682631015777588, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.32521820068359375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.27969908714294434, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.23416996002197266, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.7682056427001953, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3222048282623291, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + \" occurrences\")\n    return (mask, ax)", "compilation_passed": true, "time": 0.23159408569335938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6319060325622559, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.3025667667388916, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.14382314682006836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32, 30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.2916429042816162, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.43098902702331543, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.23430991172790527, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2963089942932129, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.3177826404571533, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.3030667304992676, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.3118460178375244, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.24904227256774902, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6340327262878418, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.2853701114654541, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.29864978790283203, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.2390599250793457, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.xticks([], [])\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3497958183288574, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.26184916496276855, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.32273101806640625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.1470499038696289, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.287708044052124, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.28728413581848145, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2433929443359375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.3432772159576416, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.xticks(rotation=45)\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.xticks([], [])\n    return (mask, ax)", "compilation_passed": true, "time": 0.2598891258239746, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.275374174118042, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + \" occurrences\")\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2959291934967041, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.15833091735839844, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.2608189582824707, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.25928497314453125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.357663631439209, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.2587625980377197, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.28882908821105957, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.6236469745635986, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.23598504066467285, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.28988075256347656, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.31813812255859375, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.29341626167297363, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.32826900482177734, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.30604004859924316, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0456089973449707, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.30304479598999023, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.2539188861846924, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.2820291519165039, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.32860803604125977, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title(target_value + ' in DataFrame')\n    return (mask, ax)", "compilation_passed": true, "time": 0.2461099624633789, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask,\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.27514100074768066, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.2510569095611572, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.32903599739074707, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.29594993591308594, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.3318290710449219, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.2385389804840088, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.2808349132537842, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.30872488021850586, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.07873106002807617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0598750114440918, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.2752981185913086, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.256256103515625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.35349202156066895, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.2925889492034912, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.7495827674865723, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2311239242553711, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.34634900093078613, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2639122009277344, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.26703310012817383, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.3212747573852539, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.27139973640441895, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6780469417572021, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.1608419418334961, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3320019245147705, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.28846263885498047, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.24184513092041016, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.4380378723144531, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.09899473190307617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [33, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.2878551483154297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.title('Heat Map')\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.2836270332336426, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45)\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6618599891662598, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.24854302406311035, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.33855390548706055, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.show()\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3392658233642578, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6618599891662598, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.2953040599822998, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2881641387939453, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=90)\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.32931089401245117, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6319060325622559, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.27840518951416016, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.3224649429321289, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.34558629989624023, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.2741551399230957, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.30219292640686035, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.7901520729064941, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.23741507530212402, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [35, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3943510055541992, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.7924673557281494, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=90)\n    return (mask, ax)", "compilation_passed": true, "time": 0.2780888080596924, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.7053639888763428, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.25513410568237305, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title(target_value + ' in DataFrame')\n    return (mask, ax)", "compilation_passed": true, "time": 0.3282887935638428, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.16315603256225586, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.050814151763916016, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heatmap: Target Value')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask,\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.2518141269683838, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.34769201278686523, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask,\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 3.668254852294922, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.3017091751098633, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3758358955383301, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.31827402114868164, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.7619180679321289, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.2873249053955078, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.3516671657562256, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.41716480255126953, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.22464799880981445, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.2897911071777344, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3343169689178467, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.36391401290893555, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.29869508743286133, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.32883501052856445, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.13982892036437988, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.title('Heatmap of target values')\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.title('Heatmap of target values')\n    return (mask, ax)", "compilation_passed": true, "time": 0.32871508598327637, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.2700521945953369, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.27295899391174316, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.3875081539154053, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.29976487159729004, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return (mask, ax)", "compilation_passed": true, "time": 0.061618804931640625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.2910761833190918, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2405538558959961, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.ylabel('Column Name')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Boolean Visualization\")\n    return (mask, ax)", "compilation_passed": true, "time": 0.27181577682495117, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.3173098564147949, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.30245280265808105, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.7322609424591064, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.28728771209716797, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.24550390243530273, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.31746768951416016, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.2421398162841797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.275374174118042, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.2979888916015625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.285416841506958, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.3120458126068115, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.29738330841064453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.32555413246154785, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.3203151226043701, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.734896183013916, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.25781702995300293, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3376331329345703, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.8427350521087646, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.title('Target value exists')\n    return (mask, ax)", "compilation_passed": true, "time": 0.3019430637359619, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.34519386291503906, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.2815883159637451, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.33554506301879883, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.2668449878692627, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.29183387756347656, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.10762405395507812, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.3283872604370117, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.22464799880981445, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.273622989654541, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.title('Heatmap of Target Value in DataFrame')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3020198345184326, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.25414395332336426, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.xticks(rotation=90)\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.29341626167297363, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3659498691558838, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.22464799880981445, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.5906381607055664, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.25599193572998047, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return (mask, ax)", "compilation_passed": true, "time": 0.36420702934265137, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.14824604988098145, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6982998847961426, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.31762099266052246, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.28735995292663574, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.07873106002807617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.2675657272338867, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.32478976249694824, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.07873106002807617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.2594618797302246, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.8427350521087646, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.28173279762268066, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.09899473190307617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32, 35, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False)\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.1665961742401123, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2766859531402588, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.2943282127380371, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return (mask, ax)", "compilation_passed": true, "time": 0.3626251220703125, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.23741507530212402, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return (mask, ax)", "compilation_passed": true, "time": 0.3348109722137451, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.2708308696746826, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.3760192394256592, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.2570970058441162, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.29164910316467285, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.24843311309814453, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.30777692794799805, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask,\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.25253891944885254, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.3604118824005127, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists')\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3099231719970703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.25076937675476074, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.2801640033721924, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2507190704345703, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2882359027862549, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.27106308937072754, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0618128776550293, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.29029393196105957, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask,\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6942398548126221, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.3210461139678955, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3007838726043701, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.33815598487854004, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.33716702461242676, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.25414395332336426, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.42894887924194336, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.06944799423217773, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.29317283630371094, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.32616233825683594, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.36138105392456055, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.2853701114654541, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.31585001945495605, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6992580890655518, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.31352710723876953, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.29733705520629883, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3343379497528076, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.title('Target value exists')\n    return (mask, ax)", "compilation_passed": true, "time": 0.2540569305419922, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.33183908462524414, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False)\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.24434685707092285, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6992580890655518, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.38104701042175293, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45)\n    return (mask, ax)", "compilation_passed": true, "time": 0.29070401191711426, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.39760589599609375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.28734588623046875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.36330485343933105, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3484659194946289, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0661628246307373, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.25337791442871094, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.2817058563232422, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.28923797607421875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.13982892036437988, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title('Target value exists')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.32950496673583984, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.34795689582824707, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.8429112434387207, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.14382314682006836, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.2969350814819336, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3260040283203125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3645060062408447, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.35758423805236816, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.2570970058441162, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.3438119888305664, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.339587926864624, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3007838726043701, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.3205399513244629, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6745181083679199, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.29615116119384766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.32167887687683105, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.3742549419403076, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.9153308868408203, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.xticks(rotation=45)\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.2572650909423828, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3139183521270752, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3355839252471924, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6319060325622559, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.title('Target Value')\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.3769850730895996, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.32738304138183594, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Boolean Visualization\")\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.29526329040527344, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.3131246566772461, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.28359127044677734, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3578801155090332, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.2390599250793457, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cbar=False)\n    plt.title('Heat Map')\n    return (mask, ax)", "compilation_passed": true, "time": 0.29455995559692383, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.3061850070953369, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax", "compilation_passed": false, "time": 0.00046896934509277344, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [34, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.title(\"Boolean Visualization\")\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.28088998794555664, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.3398160934448242, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.25763916969299316, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.33423399925231934, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.13982892036437988, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.2722790241241455, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.43142199516296387, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2570171356201172, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.3012242317199707, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.31307291984558105, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.26093101501464844, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.2986180782318115, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.7619180679321289, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + \" occurrences\")\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.28232312202453613, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.2903478145599365, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3381190299987793, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.35414600372314453, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.09899473190307617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [34, 30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.3379809856414795, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.2849280834197998, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 4.497886896133423, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.5775318145751953, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.3193678855895996, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(target_value + \" occurrences\")\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.3106191158294678, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.17571187019348145, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.3698258399963379, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', square=True, annot=True, fmt='')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.16320490837097168, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.2625119686126709, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.3632020950317383, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=90)\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heatmap of Target Value')\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.2780122756958008, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.3072829246520996, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value')\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target Value')\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2507190704345703, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.749014139175415, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.09899473190307617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.31087303161621094, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.7685120105743408, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.3646070957183838, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask,\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.09899473190307617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.28480100631713867, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.335712194442749, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.3320910930633545, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.35764288902282715, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.7989108562469482, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.1545238494873047, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.30512094497680664, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.2933349609375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.3586843013763428, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.3421311378479004, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.27817392349243164, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.32489681243896484, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.31647706031799316, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3433258533477783, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return mask, ax", "compilation_passed": true, "time": 0.27857184410095215, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.6272499561309814, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.3239758014678955, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heat Map')\n    return (mask, ax)", "compilation_passed": true, "time": 0.33525991439819336, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='coolwarm', cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.15534090995788574, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2008681297302246, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.28800106048583984, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.3108499050140381, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row, axis=1)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.30730485916137695, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.8627078533172607, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.37484121322631836, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Boolean Heatmap')  # Adjusted to not display title for clarity\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.3225247859954834, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.3242759704589844, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6319060325622559, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6942398548126221, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.29414820671081543, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.3336329460144043, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.xticks(rotation=45)\n    return mask, ax", "compilation_passed": true, "time": 0.3446180820465088, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.05192279815673828, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(20, 20))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='magma')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.30942797660827637, "tests_passed": true, "error": null}}
{"selected_lines": [34, 30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.12483096122741699, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=1.0, vmax=3.0, vmin=0.0, annot=False, linewidths=.5, square=True, linecolor='white')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.8429112434387207, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[\"Column1\"] == target_value] != None\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.1901838779449463, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.title(target_value + \" occurrences\")\n    return mask, ax", "compilation_passed": true, "time": 0.3214290142059326, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Boolean Visualization\")\n    return mask, ax<|endoftext|># Task 4 - Q5", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.3059568405151367, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Occurrences of ' + target_value)  # Adjust to display the target value\n    return mask, ax", "compilation_passed": true, "time": 0.7322609424591064, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.36542677879333496, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 5))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.3405311107635498, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.3627278804779053, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.2655980587005615, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title('Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.1729121208190918, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, annot=True, cmap='gray', square=True, fmt='')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.title('Task')\n    return mask, ax", "compilation_passed": true, "time": 0.35994815826416016, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.2982957363128662, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.40355396270751953, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.6992580890655518, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.3279719352722168, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.6272499561309814, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.5621669292449951, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 8))\n    ax = sns.heatmap(mask, cmap='Reds', center=0,\n    plt.title('Task')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of Target Value')\n    return mask, ax", "compilation_passed": true, "time": 0.3156619071960449, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.title(f'Dataframe with Target Value: {target_value}', fontsize=20, fontweight='bold')\n    return (mask, ax)", "compilation_passed": true, "time": 0.28903722763061523, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='Reds', annot=True, cbar=False, linewidths=0)\n    plt.show()\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap: ' + target_value)  # Adjust title\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.2737090587615967, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='cool', linewidths=0.5, cbar=False, square=True)\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.3144960403442383, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heat Map')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.3964972496032715, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].map(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.34350109100341797, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap=\"YlOrRd\", linewidths=0.5, annot=True)\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='cool')\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.33246374130249023, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 8))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.36802101135253906, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax<|endoftext|># 1. Write a Python program to check if a number is positive, negative, or zero", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Heatmap of target values')\n    return mask, ax", "compilation_passed": true, "time": 0.27312779426574707, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title('Heatmap of Target Value')\n    return mask, ax<|endoftext|># This script defines a function called \"task_func\" that takes two parameters:", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title(\"Boolean Visualization\")\n    return mask, ax", "compilation_passed": true, "time": 0.3523399829864502, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column3'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.apply(lambda x: x.isin([target_value]), axis=1).values\n    # Plot the heatmap\n    plt.figure(figsize=(12, 7))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks([], [])\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask,\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.34142279624938965, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(16, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=45, ha='right')  # Adjusting x-axis ticks for better readability\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.749014139175415, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax<|endoftext|>#!/usr/bin/env python", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()  # Show the heatmap in a new window\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(12, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.title('Target value exists in DataFrame')  # Adjust the title accordingly\n    return mask, ax", "compilation_passed": true, "time": 0.300429105758667, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.title('Heatmap for 332')  # Adjust title for better readability\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.26958703994750977, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1)]\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.show()\n    return mask, ax<|endoftext|>import pandas as pd", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 30, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, linewidth=1)\n    plt.title('Target Value Occurrence in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.title('Heat Map')\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks(rotation=0, ha='right')  # Adjust text to be aligned with column values\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.34455299377441406, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.26631712913513184, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, cmap='Reds', annot=True, linewidths=1.5)\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.xticks(rotation=45)\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.3402531147003174, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column3\"].eq(target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='viridis', linewidths=0, cbar=False)\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.07873106002807617, "tests_passed": false, "error": "IndexError"}}
{"selected_lines": [32, 33, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 7))\n    ax = sns.heatmap(mask, cmap='YlGnBu', annot=True, square=True, linewidths=0.5)\n    plt.title('332:')  # Adjusted to center the title on the heatmap\n    return mask, ax", "compilation_passed": true, "time": 0.36120104789733887, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 5))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.734896183013916, "tests_passed": true, "error": null}}
{"selected_lines": [30, 34, 32, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure()\n    ax = sns.heatmap(mask, cbar=False)\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='magma', annot=False)\n    plt.show()\n    return mask, ax<|endoftext|>from tkinter import ttk, filedialog, messagebox, font", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.xticks(rotation=90)\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(15, 15))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.7890150547027588, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"YlGnBu\", cbar=False, square=True, annot=True, fmt=\"d\")\n    plt.title(\"Dataframe Search Results\")\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Greens', annot=True, fmt='D')\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(16, 9))\n    ax = sns.heatmap(mask, cmap='coolwarm', linewidths=0.5, linecolor='white')\n    plt.title(f\"Occurrences of '{target_value}' in DataFrame\")\n    return mask, ax", "compilation_passed": true, "time": 0.3514111042022705, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.title('Task')\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, annot=True, linewidth=0.5, cmap='YlOrBr')\n    plt.show()\n    return mask, ax<|endoftext|># ----------------------------------------------------------------------------------------------------------------------", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.8627078533172607, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 35], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'].isin([target_value])\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cmap='Blues')\n    plt.ylabel('Column Name')\n    return mask, ax", "compilation_passed": true, "time": 0.3786911964416504, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe['Column1'] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='Blues', cbar=False)  # Adjusted to not display color bar for clarity in Boolean visualization\n    plt.xticks([], [])\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 34, 32, 30], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(12, 8))\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.title(target_value + ' in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.33136606216430664, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe.applymap(lambda x: x == target_value)\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap=\"RdYlGn\", annot=False, linewidths=0.5, cbar_kws={'label': \"Occurrences\"})\n    plt.show()\n    return mask, ax", "compilation_passed": true, "time": 0.8627078533172607, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 35, 32], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[dataframe['Column1'] == target_value].index\n    # Plot the heatmap\n    plt.figure(figsize=(10, 10))\n    ax = sns.heatmap(mask, cbar=False, linewidth=0.1, cmap='Reds', square=True)\n    plt.show()\n    return (mask, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 34], "result": {"code": "import matplotlib.pyplot as plt\nimport seaborn as sns\n\n\ndef task_func(dataframe, target_value='332'):\n    \"\"\"\n    Searches a given DataFrame for occurrences of a specified target value and visualizes these occurrences using a heatmap.\n\n    Parameters:\n    - dataframe (pd.DataFrame): The input DataFrame to search.\n    - target_value (str, optional): The value to search for in the DataFrame. Defaults to '332'.\n\n    Returns:\n    - tuple: A tuple containing:\n        - pd.DataFrame: A DataFrame with Boolean values indicating the presence of the target value in the input DataFrame.\n        - matplotlib.axes._axes.Axes: The Axes object of the heatmap.\n\n    Requirements:\n    - matplotlib.pyplot\n    - seaborn\n\n    Example:\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({\n    ...     'Column1': ['0', 'a', '332', '33'],\n    ...     'Column2': ['1', 'bb', '33', '22'],\n    ...     'Column3': ['2', 'ccc', '2', '332']\n    ... })\n    >>> mask, ax = task_func(df, '332')\n    \"\"\"\n    mask = dataframe[\"Column1\"] == target_value\n    # Plot the heatmap\n    plt.figure(figsize=(8, 6))\n    ax = sns.heatmap(mask, cmap='YlOrRd', annot=True, linewidths=.5, square=True, fmt='g', cbar_kws={'label': 'Count'})\n    plt.title('Heatmap of Target Value in DataFrame')\n    return mask, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
