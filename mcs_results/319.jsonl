{"selected_lines": [37, 36, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.xlabel(\"Word\")\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005994081497192383, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 31, 37, 32, 29, 39, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0586240291595459, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 32, 33, 38, 31, 29, 35, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 33, 31, 36, 38, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09243083000183105, "tests_passed": true, "error": null}}
{"selected_lines": [38, 30, 36, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 35, 39, 38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(False)\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 33, 39, 35, 32, 37, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009135007858276367, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 31, 32, 35, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n)\n    plt.ylabel('word frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014016866683959961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 39, 35, 30, 38, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.026150226593017578, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014016151428222656, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 29, 35, 39, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n,\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 38, 37, 30, 31, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 32, 37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005507946014404297, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10506916046142578, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 36, 31, 32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02331399917602539, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 38, 29, 36, 35, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006231069564819336, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 33, 38, 36, 39, 29, 35, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005286216735839844, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 39, 30, 29, 35, 37, 32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = plt.subplot()\n    plt.xlabel('word')\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 36, 35, 31, 39, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = plt.subplot(1, 1, 1)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005229949951171875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 33, 35, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004564046859741211, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009179115295410156, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 31, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005811929702758789, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 38, 35, 30, 36, 37, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053403377532958984, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 33, 29, 30, 38, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 38, 32, 39, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013985157012939453, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 32, 31, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n)\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022402048110961914, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09770703315734863, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014703035354614258, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 29, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 35, 38, 30, 39, 32, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007838964462280273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 36, 32, 38, 39, 35, 31, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 30, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005855083465576172, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 33, 39, 35, 32, 38, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0040891170501708984, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35, 39, 32, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 37, 36, 35, 39, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 35, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004873037338256836, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01942610740661621, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37, 36, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = plt.subplot()\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006175994873046875, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09496068954467773, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10152387619018555, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 36, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004797935485839844, "tests_passed": true, "error": null}}
{"selected_lines": [39, 30, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.021893024444580078, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 36, 37, 30, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29, 36, 35, 33, 30, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = plt.axes()\n    plt.tight_layout()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013202905654907227, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 38, 31, 30, 37, 39, 36, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005506038665771484, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09993290901184082, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 38, 32, 31, 37, 35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.show()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 38, 35, 29, 33, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006105661392211914, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019301891326904297, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 35, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09243083000183105, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 38, 32, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005307912826538086, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 39, 36, 33, 32, 30, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot()\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007158041000366211, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 37, 30, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014080047607421875, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09934711456298828, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 37, 33, 30, 31, 35, 38, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004385948181152344, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005760908126831055, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35, 29, 39, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = plt.subplot(111)\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005428791046142578, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019301891326904297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 36, 30, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005067110061645508, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.47881317138671875, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 29, 33, 32, 31, 39, 36, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = plt.subplot(1, 1, 1)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0060231685638427734, "tests_passed": true, "error": null}}
{"selected_lines": [29, 39, 36, 31, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005222797393798828, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00878286361694336, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35, 30, 36, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009930133819580078, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [31, 29, 38, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006055116653442383, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09150576591491699, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 38, 33, 35, 31, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 38, 39, 32, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close('all')\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10348272323608398, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29, 38, 31, 39, 37, 35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 38, 39, 36, 31, 32, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 39, 36, 32, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005307912826538086, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 33, 37, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 30, 33, 38, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005254983901977539, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 36, 37, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006148099899291992, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 33, 32, 36, 29, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.xlabel('word')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0049839019775390625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 37, 31, 33, 36, 32, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 36, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008806228637695312, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 31, 32, 30, 36, 38, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 37, 30, 31, 33, 32, 35, 38, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot()\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008091926574707031, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 38, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0048410892486572266, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10205793380737305, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0069768428802490234, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004116058349609375, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 35, 36, 31, 29, 33, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 39, 33, 37, 32, 38, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 33, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014123916625976562, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 32, 35, 36, 31, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.show()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 33, 29, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 30, 35, 38, 36, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 37, 30, 31, 39, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006209135055541992, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 39, 36, 35, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014338254928588867, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00732421875, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005440950393676758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 33, 38, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 30, 39, 29, 35, 36, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 30, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00539398193359375, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 39, 33, 38, 30, 32, 36, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 36, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.xlabel('Words')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053098201751708984, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 39, 31, 37, 35, 30, 29, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = fdist.plot(top_n)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.026219844818115234, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005127906799316406, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.12507176399230957, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 39, 38, 30, 35, 37, 29, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 32, 33, 38, 29, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02425694465637207, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 36, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 38, 37, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01398015022277832, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32, 36, 29, 39, 37, 33, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 32, 35, 29, 30, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005380868911743164, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 36, 38, 39, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00931406021118164, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10506916046142578, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 30, 33, 31, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004152059555053711, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 38, 29, 37, 32, 31, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 30, 31, 38, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005877971649169922, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004765987396240234, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009951591491699219, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 33, 39, 38, 29, 36, 37, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.show(False)\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009207725524902344, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 36, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013983011245727539, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 32, 30, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Frequency')\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.03163290023803711, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 39, 31, 37, 38, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009623050689697266, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 36, 29, 37, 33, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.xlabel(\"Word\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009179115295410156, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 35, 38, 33, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005392313003540039, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 39, 35, 29, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004925251007080078, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 30, 31, 39, 37, 33, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Word\")\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 38, 32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006136178970336914, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005163908004760742, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 33, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(block=False)\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004960060119628906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 39, 36, 33, 30, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.061341047286987305, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009691715240478516, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 33, 39, 29, 30, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013919353485107422, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009214162826538086, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 38, 30, 29, 32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00887608528137207, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 38, 36, 37, 39, 32, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 39, 31, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 36, 31, 32, 38, 29, 37, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot(1, 1, 1)\n    plt.show(False)\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007298946380615234, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 33, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0057201385498046875, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009491443634033203, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 36, 37, 35, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.018601179122924805, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 36, 30, 31, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005404949188232422, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 29, 37, 38, 33, 36, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 29, 31, 30, 36, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005244731903076172, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09150576591491699, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36, 35, 30, 33, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005925893783569336, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10152387619018555, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 30, 35, 31, 38, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29, 35, 39, 30, 38, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005290031433105469, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 29, 35, 32, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004994869232177734, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.1139678955078125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 30, 38, 31, 37, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.xlabel(\"Words\")\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006155967712402344, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 30, 37, 39, 32, 31, 29, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008589029312133789, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 35, 37, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022598981857299805, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 32, 36, 33, 29, 37, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0046939849853515625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 29, 33, 36, 37, 35, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = plt.gca()\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 37, 35, 36, 31, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 32, 29, 35, 38, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0058019161224365234, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 35, 38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004846096038818359, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 33, 37, 30, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005553007125854492, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 30, 33, 38, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(block=False)\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0056591033935546875, "tests_passed": true, "error": null}}
{"selected_lines": [29, 39, 32, 30, 33, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005403041839599609, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 30, 38, 31, 37, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 32, 38, 29, 36, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.gca()\n    plt.xlabel('word')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007067203521728516, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0008356571197509766, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 36, 31, 38, 33, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09150576591491699, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 29, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30, 35, 36, 38, 39, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 37, 33, 29, 36, 38, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006001949310302734, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 35, 39, 31, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013301849365234375, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 36, 29, 33, 37, 39, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.xlabel(\"Word\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0558018684387207, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 31, 39, 35, 33, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = plt.subplot(1, 1, 1)\n    plt.xlabel(\"Word\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005959272384643555, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 36, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0052700042724609375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 32, 30, 36, 38, 37, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 31, 33, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0048198699951171875, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 33, 35, 32, 37, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 39, 36, 29, 30, 33, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 39, 37, 31, 33, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006608724594116211, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 33, 30, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004207134246826172, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.020542144775390625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 36, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 31, 38, 39, 36, 32, 35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 30, 35, 37, 29, 36, 32, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 36, 30, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.ylabel('Frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0049970149993896484, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.101715087890625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 36, 29, 35, 37, 30, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013944864273071289, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 31, 35, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053670406341552734, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('word frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014014005661010742, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 31, 32, 29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 37, 33, 39, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005342960357666016, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 37, 38, 31, 39, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0059010982513427734, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 29, 32, 31, 35, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00529789924621582, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019627094268798828, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 38, 33, 32, 37, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 29, 35, 31, 33, 39, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007300853729248047, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 33, 38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004977226257324219, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014032840728759766, "tests_passed": true, "error": null}}
{"selected_lines": [30, 39, 33, 35, 29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02524733543395996, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00621485710144043, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005254983901977539, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09894824028015137, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 35, 30, 39, 29, 38, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Word')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 39, 36, 30, 38, 37, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0054569244384765625, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 37, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 31, 29, 32, 38, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.020337820053100586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.1013329029083252, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 33, 29, 36, 35, 31, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 36, 39, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005307912826538086, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 38, 32, 35, 33, 39, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = plt.subplot()\n    plt.tight_layout()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02316594123840332, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 37, 29, 36, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = plt.subplot(111)\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 33, 32, 39, 38, 29, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 36, 29, 38, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004321098327636719, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 33, 38, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005246877670288086, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.025930404663085938, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.018601179122924805, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 31, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 39, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013623714447021484, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 38, 32, 35, 39, 37, 31, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01061701774597168, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013996124267578125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 39, 33, 37, 36, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053250789642333984, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 38, 29, 36, 37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.show()\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005442142486572266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 37, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007482290267944336, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 39, 35, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = plt.subplot()\n    plt.ylabel('word frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.012855052947998047, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 30, 31, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006094932556152344, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 39, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09934711456298828, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 32, 35, 36, 30, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005278825759887695, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09993791580200195, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 38, 31, 29, 37, 32, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 29, 32, 33, 35, 37, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005433082580566406, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0008356571197509766, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 31, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005960941314697266, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 37, 32, 29, 31, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019550323486328125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 29, 37, 32, 39, 38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.xlabel('word')\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 39, 33, 35, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0050618648529052734, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 32, 29, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 33, 32, 39, 38, 30, 29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019550323486328125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 38, 39, 36, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10529780387878418, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 30, 39, 33, 36, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 32, 29, 37, 31, 35, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = plt.subplot(111)\n    plt.ylabel('word frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 31, 32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022618770599365234, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 37, 30, 35, 38, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.show(False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014002799987792969, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 35, 38, 39, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Word')\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004931211471557617, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 36, 35, 38, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09934711456298828, "tests_passed": true, "error": null}}
{"selected_lines": [39, 30, 33, 29, 37, 35, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 33, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005998134613037109, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 38, 36, 35, 29, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 35, 30, 32, 36, 33, 39, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 38, 33, 36, 39, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.xlabel('Words')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 31, 37, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.025065898895263672, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00475311279296875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 38, 30, 31, 32, 39, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005061149597167969, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008831977844238281, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 35, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008355855941772461, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09993791580200195, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 32, 30, 39, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.026012897491455078, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 32, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 39, 37, 31, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = plt.subplot()\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 37, 30, 36, 33, 35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = plt.subplot()\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 39, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Word\")\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 31, 33, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0048198699951171875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 38, 32, 36, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = plt.subplot(111)\n    plt.xlabel('word')\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 30, 37, 32, 29, 36, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 30, 36, 29, 32, 39, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022372961044311523, "tests_passed": true, "error": null}}
{"selected_lines": [36, 29, 35, 31, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006037235260009766, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0316767692565918, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01981067657470703, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10962104797363281, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 31, 32, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 37, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.xlabel(\"Words\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005299091339111328, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00523066520690918, "tests_passed": true, "error": null}}
{"selected_lines": [30, 39, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02589583396911621, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 35, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09993290901184082, "tests_passed": true, "error": null}}
{"selected_lines": [37, 29, 36, 35, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019301891326904297, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013566970825195312, "tests_passed": true, "error": null}}
{"selected_lines": [38, 30, 32, 31, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013119935989379883, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.1139678955078125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 29, 39, 37, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014193058013916016, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 30, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('word frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02259993553161621, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 32, 39, 31, 29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013875961303710938, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 36, 32, 38, 37, 33, 35, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 31, 32, 35, 33, 29, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 32, 33, 31, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09760189056396484, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 31, 30, 38, 32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014752864837646484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 32, 37, 38, 30, 35, 39, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 38, 37, 36, 31, 29, 35, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005437135696411133, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 31, 39, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.025266170501708984, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 33, 30, 31, 39, 35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 39, 30, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006211042404174805, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 29, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0052089691162109375, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 36, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004797935485839844, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 30, 39, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004888772964477539, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 39, 33, 31, 32, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0061931610107421875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005259037017822266, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 39, 32, 35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 39, 31, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0224609375, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 35, 30, 37, 29, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Words')\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01005101203918457, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Word')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004884004592895508, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005318880081176758, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33, 38, 36, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 37, 29, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 29, 38, 35, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00597691535949707, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00450897216796875, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005259037017822266, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 37, 31, 35, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008828163146972656, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009951591491699219, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 37, 33, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.06389212608337402, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 29, 30, 36, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = plt.subplot(111)\n    plt.show(False)\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 36, 29, 35, 33, 31, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.026383161544799805, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 29, 32, 33, 35, 30, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0054318904876708984, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 37, 32, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 30, 36, 39, 31, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013919353485107422, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 36, 39, 38, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00535893440246582, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 39, 37, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005815029144287109, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0586240291595459, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02419304847717285, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 33, 32, 29, 37, 38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 37, 31, 38, 33, 36, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.xlabel('word')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 38, 29, 36, 35, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 37, 33, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004939079284667969, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 36, 31, 39, 33, 30, 37, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0052547454833984375, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 38, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005009889602661133, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 32, 37, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 31, 29, 37, 33, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006007671356201172, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013981819152832031, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 39, 31, 29, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 31, 33, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0048198699951171875, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.03263068199157715, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 38, 39, 29, 37, 30, 32, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.ylabel('word frequency')\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 32, 30, 38, 33, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.xlabel('word')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005344867706298828, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [39, 30, 29, 32, 31, 33, 38, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0052890777587890625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 38, 32, 29, 31, 30, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 33, 37, 29, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 39, 36, 33, 37, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 35, 36, 38, 32, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10440993309020996, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 37, 36, 39, 29, 35, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = plt.axes()\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 38, 37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('word frequency')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005029916763305664, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 29, 38, 39, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 29, 37, 31, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 36, 38, 35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 38, 30, 32, 39, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 30, 39, 33, 36, 37, 35, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.xlabel('Words')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005951881408691406, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.061341047286987305, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013964176177978516, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0051610469818115234, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022697925567626953, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 32, 37, 38, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(False)\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008769750595092773, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 36, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009598016738891602, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 39, 29, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 38, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 39, 31, 38, 30, 35, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = plt.subplot(111)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 29, 31, 32, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009100437164306641, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 35, 29, 33, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 39, 35, 37, 36, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = plt.axes()\n    plt.show()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005359649658203125, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.023356914520263672, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 33, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008733987808227539, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 38, 36, 29, 39, 37, 31, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006400108337402344, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 39, 29, 38, 32, 33, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 32, 31, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014832019805908203, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 35, 37, 31, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = plt.axes()\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0056149959564208984, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 31, 37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show(block=False)\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0054950714111328125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 35, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0050449371337890625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 37, 38, 32, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019550323486328125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 33, 39, 32, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.1026308536529541, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006095170974731445, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009930133819580078, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 37, 32, 31, 38, 39, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 32, 39, 38, 29, 31, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 31, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053060054779052734, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 29, 37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(block=False)\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005026102066040039, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 39, 31, 38, 36, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008726835250854492, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.1056220531463623, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 33, 37, 38, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008859872817993164, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 37, 38, 29, 35, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 38, 30, 29, 37, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013880729675292969, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 29, 35, 30, 39, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.1013329029083252, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 38, 32, 36, 39, 37, 31, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n)\n    plt.ylabel('Frequency')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 31, 39, 29, 37, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 29, 37, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 37, 39, 35, 33, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01380610466003418, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 36, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.ylabel('word frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 29, 36, 37, 31, 38, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 39, 38, 33, 36, 35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 35, 32, 33, 38, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 29, 37, 38, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 30, 33, 38, 32, 35, 31, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 31, 33, 35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005952119827270508, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 33, 30, 29, 32, 31, 36, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.show(False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006033897399902344, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 37, 33, 39, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 39, 29, 37, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004961967468261719, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10203099250793457, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 29, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.03115391731262207, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019550323486328125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 33, 37, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.025723934173583984, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053670406341552734, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 32, 36, 29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 39, 33, 31, 32, 29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00518488883972168, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019550323486328125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 30, 32, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006599903106689453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 30, 38, 31, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004006862640380859, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 36, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004797935485839844, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 39, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 36, 37, 39, 38, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 33, 35, 38, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004896879196166992, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09243083000183105, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00479888916015625, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 35, 31, 38, 39, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = plt.axes()\n    plt.ylabel('Cumulative Counts')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0061798095703125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = plt.axes()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0051801204681396484, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009951591491699219, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008826971054077148, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 38, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004773855209350586, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 29, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01048588752746582, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005266904830932617, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 37, 32, 33, 39, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009384870529174805, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01942610740661621, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005565166473388672, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 37, 30, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014359235763549805, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 33, 38, 35, 32, 31, 39, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.ylabel('Frequency')\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 36, 30, 29, 35, 31, 39, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 33, 37, 36, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005446195602416992, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 35, 36, 39, 38, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.ylabel('word frequency')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005330801010131836, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 39, 38, 31, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006057024002075195, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 39, 30, 35, 38, 31, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 31, 30, 39, 38, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007505893707275391, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 35, 36, 37, 39, 29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.tight_layout()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 32, 39, 38, 35, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Words')\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 39, 29, 36, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005588054656982422, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 37, 38, 32, 33, 29, 39, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33, 37, 36, 30, 35, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot()\n    plt.show(False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007979869842529297, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 31, 33, 36, 39, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022238969802856445, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 31, 29, 39, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022264957427978516, "tests_passed": true, "error": null}}
{"selected_lines": [29, 39, 35, 38, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009340047836303711, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.021013736724853516, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.ylabel('word frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005499124526977539, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 39, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02571415901184082, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 36, 39, 38, 35, 30, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005928993225097656, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005539894104003906, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10529780387878418, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 37, 38, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 37, 29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.tight_layout()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.012120962142944336, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 30, 36, 38, 39, 29, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009590625762939453, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 33, 36, 29, 37, 31, 35, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.title(\"Frequency Distribution\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 29, 31, 36, 33, 32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = plt.subplot()\n    plt.xlabel(\"Word\")\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 31, 38, 29, 30, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013994932174682617, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005382061004638672, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 30, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 29, 30, 38, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 31, 37, 35, 36, 30, 32, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.ylabel('Cumulative Counts')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005384206771850586, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 36, 39, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.ylabel('word frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005879878997802734, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01911306381225586, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 38, 39, 30, 35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 39, 33, 29, 31, 30, 35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019301891326904297, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 29, 33, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004155874252319336, "tests_passed": true, "error": null}}
{"selected_lines": [39, 30, 36, 31, 35, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0049250125885009766, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0586240291595459, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 30, 35, 38, 32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005342006683349609, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 29, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.xlabel('Words')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006056070327758789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 38, 36, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.show()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004621982574462891, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 30, 36, 31, 32, 38, 29, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.ylabel('word frequency')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005197048187255859, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 32, 36, 39, 30, 31, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 35, 30, 31, 36, 39, 33, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = plt.subplot(1, 1, 1)\n    plt.ylabel('Frequency')\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005818843841552734, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 31, 30, 35, 29, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09993886947631836, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009691715240478516, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 29, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0041768550872802734, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014005661010742188, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 37, 35, 32, 31, 39, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = plt.subplot(1, 1, 1)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 36, 37, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005288124084472656, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004948854446411133, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 38, 30, 35, 31, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005690813064575195, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0052318572998046875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37, 38, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005066871643066406, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 35, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.010148763656616211, "tests_passed": true, "error": null}}
{"selected_lines": [29, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009398221969604492, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 35, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 37, 31, 38, 32, 30, 36, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.show()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019700050354003906, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 36, 32, 30, 37, 39, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008575201034545898, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 39, 29, 30, 37, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Words\")\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 30, 29, 37, 35, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.020095348358154297, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 29, 35, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02425694465637207, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019550323486328125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 37, 29, 35, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004504680633544922, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 32, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 32, 31, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005955934524536133, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 33, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005423307418823242, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 39, 35, 30, 33, 29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01942610740661621, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 29, 39, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005285739898681641, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 38, 30, 33, 37, 39, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = plt.axes()\n    plt.show()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009064912796020508, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 31, 36, 39, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005233287811279297, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 30, 31, 32, 29, 33, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004909038543701172, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 38, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007554054260253906, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01324009895324707, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 37, 32, 30, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 35, 29, 36, 30, 38, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 31, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01408529281616211, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 38, 31, 29, 36, 32, 37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n)\n    plt.xlabel(\"Word\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009810924530029297, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05892515182495117, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 33, 38, 31, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 29, 30, 38, 36, 31, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = fdist.plot(top_n,\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 32, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0054187774658203125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 29, 36, 39, 38, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.47881317138671875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 37, 35, 38, 33, 31, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 39, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005394935607910156, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 39, 29, 31, 33, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.title(\"Frequency Distribution\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008712291717529297, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09760189056396484, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 36, 38, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = plt.subplot()\n    plt.show(False)\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0054950714111328125, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 31, 36, 29, 35, 33, 30, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0586240291595459, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37, 38, 31, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0193328857421875, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [39, 36, 32, 30, 35, 29, 38, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = plt.subplot()\n    plt.xlabel(\"Word\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 33, 29, 30, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 37, 30, 38, 33, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Words\")\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005813121795654297, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10592293739318848, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 36, 38, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.06396627426147461, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 32, 31, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02232813835144043, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 36, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 30, 39, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 29, 39, 35, 32, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009557008743286133, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 36, 39, 30, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.ylabel('Frequency')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 33, 38, 37, 35, 29, 31, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = plt.axes()\n    plt.xlabel(\"Words\")\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30, 38, 32, 36, 35, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0586240291595459, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39, 37, 33, 32, 30, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show(False)\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005591154098510742, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 35, 37, 39, 31, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01401066780090332, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 36, 39, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014116287231445312, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02419304847717285, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009889602661132812, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 30, 38, 31, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004904031753540039, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 31, 29, 36, 30, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 37, 32, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 29, 39, 37, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 32, 33, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014099836349487305, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09483981132507324, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009658336639404297, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 30, 29, 32, 35, 36, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 37, 32, 36, 31, 39, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.025218725204467773, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 35, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006440877914428711, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 31, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.025381088256835938, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 33, 31, 36, 38, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.show()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 30, 33, 31, 37, 35, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004930973052978516, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 39, 31, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.025866031646728516, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 36, 32, 38, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053713321685791016, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0008361339569091797, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [33, 30, 35, 29, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 36, 29, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005453824996948242, "tests_passed": true, "error": null}}
{"selected_lines": [29, 39, 38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.023081064224243164, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32, 35, 33, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014105081558227539, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 31, 32, 33, 35, 29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005472898483276367, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 38, 31, 30, 32, 33, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 29, 35, 31, 36, 32, 37, 33, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 39, 32, 29, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005178928375244141, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.026150226593017578, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09243083000183105, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 32, 36, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013497114181518555, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 30, 38, 39, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 29, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004123210906982422, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005944013595581055, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 33, 31, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00526738166809082, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 38, 39, 30, 37, 36, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = plt.axes()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005296945571899414, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.061341047286987305, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10440993309020996, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009356021881103516, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37, 31, 36, 35, 30, 38, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005321025848388672, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005282163619995117, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 32, 31, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013878107070922852, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 38, 36, 29, 32, 39, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = plt.subplot(111)\n    plt.xlabel('word')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005321979522705078, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 29, 37, 39, 35, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007585763931274414, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 35, 37, 29, 31, 33, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 39, 33, 36, 35, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005321979522705078, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.023072004318237305, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 38, 35, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.13564300537109375, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019469022750854492, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 32, 33, 39, 36, 38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0055980682373046875, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014011859893798828, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 31, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00571894645690918, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 30, 33, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 33, 29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004970073699951172, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 35, 30, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 38, 31, 30, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close(ax.figure)\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005657196044921875, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 35, 33, 39, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 39, 35, 33, 36, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09328913688659668, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 36, 29, 30, 35, 32, 38, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 39, 32, 29, 38, 35, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0049860477447509766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 39, 31, 29, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 35, 36, 29, 33, 31, 39, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.ylabel('Frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 36, 35, 30, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 39, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.03139090538024902, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 39, 35, 38, 31, 32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 31, 37, 30, 29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.tight_layout()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 31, 36, 33, 38, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05830979347229004, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 37, 30, 39, 36, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = plt.subplot(111)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005638837814331055, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 39, 33, 38, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close('all')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 31, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.023100852966308594, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 36, 31, 30, 33, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 36, 32, 29, 30, 37, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = plt.gca()\n    plt.show(False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005520820617675781, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 39, 33, 35, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005810976028442383, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.012940645217895508, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 29, 35, 31, 32, 37, 38, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 29, 30, 38, 37, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 33, 32, 36, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006153106689453125, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01942610740661621, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 31, 30, 39, 38, 36, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02209305763244629, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 30, 35, 36, 39, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10203099250793457, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 39, 36, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 39, 36, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053670406341552734, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 32, 33, 29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 29, 32, 31, 39, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(',|\\[|\\]|\\n', example_str)\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.021893024444580078, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 38, 39, 33, 30, 31, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 31, 32, 29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0007419586181640625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 30, 37, 39, 31, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.ylabel('word frequency')\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0059490203857421875, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 33, 30, 37, 39, 35, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.ylabel('word frequency')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005221128463745117, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 32, 29, 35, 39, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008106231689453125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 32, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005872964859008789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 36, 30, 32, 35, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 30, 36, 32, 35, 31, 39, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 38, 33, 30, 31, 39, 32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005045890808105469, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09910392761230469, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 36, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 29, 39, 38, 37, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005290031433105469, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.101715087890625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 30, 29, 38, 37, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = plt.subplot(111)\n    plt.xlabel('word')\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005945920944213867, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 37, 29, 33, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.xlabel(\"Word\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 29, 39, 31, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Frequency')\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 39, 31, 29, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008771181106567383, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 38, 39, 29, 30, 32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = plt.subplot(1, 1, 1)\n    plt.xlabel(\"Words\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005368709564208984, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 35, 32, 36, 30, 38, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.show()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 31, 38, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013944864273071289, "tests_passed": true, "error": null}}
{"selected_lines": [39, 30, 29, 32, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013280868530273438, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 31, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014208078384399414, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 29, 37, 33, 32, 31, 38, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004585981369018555, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 31, 32, 33, 35, 38, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006353855133056641, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005246162414550781, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 37, 35, 32, 31, 38, 39, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.tight_layout()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 38, 30, 29, 39, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005388975143432617, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 37, 36, 39, 35, 33, 31, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n)\n    plt.xlabel(\"Words\")\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 33, 37, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005993843078613281, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 29, 33, 30, 31, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01330423355102539, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 35, 32, 39, 31, 33, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013776779174804688, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 38, 35, 31, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005501985549926758, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 38, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 31, 36, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.021289825439453125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 32, 35, 36, 31, 29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 39, 33, 38, 35, 31, 32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005335807800292969, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 32, 37, 35, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Words')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007624387741088867, "tests_passed": true, "error": null}}
{"selected_lines": [29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009334087371826172, "tests_passed": true, "error": null}}
{"selected_lines": [29, 39, 38, 30, 33, 37, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.xlabel('word')\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005405902862548828, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 39, 30, 32, 36, 35, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n, title='Top most common words')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.007506132125854492, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 38, 30, 37, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Words')\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004786968231201172, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 37, 38, 32, 39, 31, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = plt.subplot(111)\n    plt.xlabel('Words')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005347013473510742, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005303144454956055, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005266904830932617, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 33, 38, 29, 30, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 39, 37, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019301891326904297, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 29, 39, 30, 33, 32, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006112098693847656, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 38, 30, 36, 31, 32, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close('all')\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 30, 35, 36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.ylabel('Frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 36, 33, 37, 38, 31, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008781909942626953, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009658336639404297, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37, 33, 38, 39, 29, 35, 31, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n,\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 37, 36, 39, 29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004130125045776367, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 32, 31, 36, 33, 30, 39, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.ylabel('Frequency')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 35, 39, 38, 32, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01385188102722168, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022327184677124023, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 36, 29, 31, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.xlabel(\"Words\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 37, 29, 33, 39, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0062198638916015625, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009100437164306641, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 37, 36, 35, 38, 29, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005239009857177734, "tests_passed": true, "error": null}}
{"selected_lines": [30, 39, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013415098190307617, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0984041690826416, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013889074325561523, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 35, 37, 31, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = plt.subplot()\n    plt.show(False)\n    top_n_words = dict(zip(fdist.keys(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005557060241699219, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 38, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00454401969909668, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 39, 29, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 39, 33, 38, 31, 35, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.009412765502929688, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.020542144775390625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 35, 33, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014044046401977539, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019469022750854492, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [36, 35, 31, 29, 30, 38, 32, 33, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.close()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.020337820053100586, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02571415901184082, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.026012897491455078, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 36, 32, 35, 31, 29, 39, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008646011352539062, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 30, 37, 39, 38, 36, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0041658878326416016, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09150576591491699, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 38, 39, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006353855133056641, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 33, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022381067276000977, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 33, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 32, 38, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014021873474121094, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05477309226989746, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 31, 35, 38, 33, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 36, 29, 32, 38, 31, 39, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0054929256439208984, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09483981132507324, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 29, 31, 36, 35, 32, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053522586822509766, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 32, 29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0056879520416259766, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.042609214782714844, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close(ax.figure)\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0052089691162109375, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33, 36, 35, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 29, 35, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show(False)\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0143890380859375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005447864532470703, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 35, 38, 33, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004912853240966797, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.12507176399230957, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 29, 39, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 37, 36, 32, 35, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0007331371307373047, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32, 35, 37, 29, 31, 33, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006277799606323242, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 37, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close('all')\n    ax = plt.subplot()\n    plt.close(ax.figure)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0053098201751708984, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 32, 36, 35, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00531768798828125, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00732421875, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009710788726806641, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005282163619995117, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10203099250793457, "tests_passed": true, "error": null}}
{"selected_lines": [30, 38, 36, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004797935485839844, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0049762725830078125, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019550323486328125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 30, 39, 36, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution of Words\")\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0009491443634033203, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [29, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[(.*?)\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0052301883697509766, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 29, 31, 39, 38, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = re.findall('\\w+', example_str)\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 32, 35, 29, 30, 37, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004992961883544922, "tests_passed": true, "error": null}}
{"selected_lines": [36, 30, 39, 37, 31, 29, 35, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005464076995849609, "tests_passed": true, "error": null}}
{"selected_lines": [30, 35, 31, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(zip(fdist.items(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005957841873168945, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 38, 30, 35, 31, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005690813064575195, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005173921585083008, "tests_passed": true, "error": null}}
{"selected_lines": [38, 29, 37, 30, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist.items()):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005223274230957031, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.006199836730957031, "tests_passed": true, "error": null}}
{"selected_lines": [30, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.ylabel('Cumulative Counts')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005213260650634766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 35, 29, 36, 38, 30, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.018601179122924805, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.09150576591491699, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": false, "time": 0.00017905235290527344, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 37, 33, 31, 32, 39, 36, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.xlabel('Word')\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.008887052536010742, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013919353485107422, "tests_passed": true, "error": null}}
{"selected_lines": [29, 38, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013620138168334961, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 32, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005405902862548828, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005282163619995117, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 33, 37, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.xlabel(\"Words\")\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0061092376708984375, "tests_passed": true, "error": null}}
{"selected_lines": [39, 30, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.022287845611572266, "tests_passed": true, "error": null}}
{"selected_lines": [30, 36, 33, 35, 32, 39, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 37, 30, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 37, 31, 35, 33, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005039691925048828, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29, 30, 37, 39, 31, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 31, 32, 29, 33, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 36, 31, 29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.show()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 39, 38, 35, 33, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[A-Za-z]+', text)\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.title(\"Frequency Distribution\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013895988464355469, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 30, 29, 36, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 38, 35, 31, 33, 29, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.tight_layout()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.03436112403869629, "tests_passed": true, "error": null}}
{"selected_lines": [39, 30, 36, 31, 37, 35, 29, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 35, 32, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014080047607421875, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.021289825439453125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 33, 37, 39, 38, 29, 32, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = plt.gca()\n    plt.ylabel('Cumulative Counts')\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 38, 39, 37, 36, 30, 31, 33, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split('[^\\w]', example_str.strip())\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.ylabel('Frequency')\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 37, 30, 29, 32, 38, 36, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[[^\\]]*?\\]\", \"\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n < len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0061571598052978516, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.019361019134521484, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 35, 36, 32, 33, 29, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 29, 35, 30, 32, 37, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str.replace('[', ' ').replace(']', ' ').replace(',', ' ')\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 35, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 6), dpi=150)\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 37, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02264404296875, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 39, 35, 37, 36, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[[^\\]]*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = plt.subplot(111)\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 29, 37, 36, 31, 30, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 35, 37, 38, 33, 36, 32, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close('all')\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0983428955078125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 38, 30, 33, 29, 35, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = dict(zip(fdist.samples(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 31, 36, 33, 38, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = example_str\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005415916442871094, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02096700668334961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.05637812614440918, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 30, 39, 35, 29, 37, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005316019058227539, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 38, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005639076232910156, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 29, 32, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Frequency')\n    top_n_words = {word: fdist[word] for word in fdist.most_common(top_n)}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004110813140869141, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 37, 30, 33, 38, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 5))\n    ax = plt.subplot()\n    plt.xlabel(\"Word\")\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005300998687744141, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.10506916046142578, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 30, 39, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005892038345336914, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 29, 30, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = [word for word in re.findall('[a-zA-Z]+', text) if len(word) > 3]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10,5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0045506954193115234, "tests_passed": true, "error": null}}
{"selected_lines": [35, 30, 37, 33, 29, 32, 36, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = plt.subplot()\n    plt.close('all')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 36, 31, 30, 29, 39, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[[^\\]]*\\]', ' ', example_str)\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0070760250091552734, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0052490234375, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\[.*?\\]', example_str)\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.021893024444580078, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > 0:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013880014419555664, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 30, 33, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in re.findall('\\w+', text) if word]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, bins=5, cumulative=False, title='Frequency Distribution')\n    plt.close()\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[^\\[\\]']+', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 35, 39, 38, 32, 37, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n != -1:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 37, 29, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.show(block=False)\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 38, 36, 31, 33, 29, 35, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, title=\"Frequency Distribution\", figsize=(8, 4))\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 39, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014091014862060547, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 31, 35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005362033843994141, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.show()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0059468746185302734, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 38, 35, 37, 29, 30, 36, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \" \", example_str)  # Remove all square brackets using regex\n    words = [word for word in text.split() if word != \"[\" and word != \"]\"]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 30, 29, 32, 39, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00531005859375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'\\[.+?\\]', '', example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.clf()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.033898115158081055, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 39, 37, 31, 35, 38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.findall('[a-zA-Z\\']+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(zip(fdist.keys()[:top_n], fdist.values()[:top_n]))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 35, 39, 36, 31, 33, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 4))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.014021873474121094, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 31, 30, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.sub('[^a-zA-Z]+', ' ', text).strip().lower().split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0061969757080078125, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 29, 32, 31, 35, 30, 36, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'[^\\w ]+', ' ', example_str)\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.close()\n    ax = fdist.plot(top_n, cumulative=True)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.004730939865112305, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n,\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": false, "time": 0.00017905235290527344, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [36, 29, 31, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = {word: freq for word, freq in fdist.items() if freq >= 30}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.020634889602661133, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 36, 33, 31, 38, 30, 29, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(\"[A-Za-z]+[.,\\']?\\s*\", example_str)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 31, 30, 29, 39, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r'(\\[[^\\]]*\\])', '', example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 30, 31, 38, 33, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, figsize=(12, 7), cum=True, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.01942610740661621, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 30, 35, 37, 39, 36, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.00542902946472168, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 35, 37, 30, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[,\\]]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n <= len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(20, 10), facecolor='#f8f8f8')\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('Word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 39, 31, 29, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(\"[\\[\\]]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(16, 10))\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005410909652709961, "tests_passed": true, "error": null}}
{"selected_lines": [29, 35, 30, 32, 38, 31, 37, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(1, 1, 1)\n    plt.show()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.ylabel('Frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.023056983947753906, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 30, 37, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower() for word in text.split() if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.xlabel('word')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005397796630859375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31, 32, 30, 29, 37, 39], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*\\]\", \"\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.xlabel(\"Word\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005575895309448242, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(zip(fdist.tab(), fdist.values()))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 39, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0061740875244140625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 30, 29, 32, 36], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(\"\\s+\", \" \", example_str)\n    words = [word.lower().replace(',', '').replace('.', '').replace(';', '').replace(':', '').replace('?', '').replace('!', '').replace(')', '').replace('(', '').replace('\\\"', '').replace('\\'', '').replace(' ', '') for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n <= len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, width=0.5, histtype='step', alpha=0.4, label='Frequency Distribution')\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 31, 38, 36, 37, 35, 30, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [w for w in text.split() if w.isalnum()]\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(10, 5))\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.show(False)\n    top_n_words = {}\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 32, 36, 31, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = re.split('[,.\\s\\t\\n]', text)\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(10, 5))\n    ax = plt.subplot()\n    plt.title(\"Most common words in the given input string\")\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005768299102783203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = \"\"\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0042569637298583984, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 37, 36, 31, 39, 30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = [word.lower() for word in text.split()]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot()\n    plt.ylabel('Frequency')\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005968809127807617, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(18, 10))\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.show()  # To show the plot, uncomment this line\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.02227473258972168, "tests_passed": true, "error": null}}
{"selected_lines": [37, 30, 31, 32, 38, 29, 36, 35], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.sub(r\"\\[.*?\\]\", \"\", example_str)\n    words = re.sub(\"\\\\s+\", \" \", text).split(\" \")\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.subplots(figsize=(18, 8))\n    ax = plt.subplot()\n    plt.show()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.005496978759765625, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 29, 38, 30, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"[ ,.!?\\[\\]]\", example_str)\n    words = re.findall(r'\\w+', text)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = fdist.most_common(top_n)\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 33, 29, 32, 36, 30, 38, 31], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = nltk.word_tokenize(text)\n    fdist = FreqDist(words)\n    if top_n < len(words):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.gca()\n    plt.ylabel('word frequency')\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 33], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(sorted(fdist.items(), key=lambda x: x[1], reverse=True)[:top_n])\n    return ax, top_n_words", "compilation_passed": true, "time": 0.013773918151855469, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 31, 35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r\"\\[(.*?)\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure(figsize=(8, 6))\n    ax = plt.axes()\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 30, 36, 32], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'[\\w\\']+', example_str)\n    words = FreqDist(text.split())\n    fdist = FreqDist(words)\n    if top_n:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 39, 32, 33, 38, 36, 35, 37], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.*\\]\", example_str)\n    words = text.split()\n    fdist = FreqDist(words)\n    if top_n is not None:\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n=top_n, title=\"Frequency Distribution\", facecolor='white',\n    plt.show()\n    top_n_words = dict(fdist.most_common())\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 35, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.findall(r'\\S+', example_str)\n    words = [word for word in text.split() if len(word) > 2]\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = ' '.join(re.findall('(.*?)\\\\[.*?\\\\]', example_str))\n    words = FreqDist(text.split()).most_common(top_n)\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = fdist.plot(top_n, cumulative=False, show=False)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.020615816116333008, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 30, 31, 29], "result": {"code": "import re\nimport matplotlib.pyplot as plt\nfrom nltk.probability import FreqDist\n\n\ndef task_func(example_str, top_n=30):\n    \"\"\"\n    Extract all texts that are not enclosed in square brackets from the given string and plot \n    a frequency distribution of the words. Also return the top_n most common words in the frequency distribution\n    as a dictionary.\n\n    Parameters:\n    - example_str (str): The input string.\n    - top_n (int, Optional): The number of most common words to display in the frequency distribution plot. Default is 30.\n\n    Returns:\n    - Axes: A matplotlib Axes object representing the frequency distribution plot.\n    - dict: A dictionary containing the top_n most common words and their frequencies.\n\n    Requirements:\n    - re\n    - nltk.probability.FreqDist\n    - matplotlib.pyplot\n\n    Example:\n    >>> ax, top_n_words = task_func(\"Josie Smith [3996 COLLEGE AVENUE, SOMETOWN, MD 21003] Mugsy Dog Smith [2560 OAK ST, GLENMEADE, WI 14098]\")\n    >>> type(ax)\n    <class 'matplotlib.axes._axes.Axes'>\n    \"\"\"\n    text = re.split(r\"\\[.+?\\]\", example_str, maxsplit=1)\n    words = [word for word in text.split(' ') if word != '']\n    fdist = FreqDist(words)\n    if top_n > len(fdist):\n        top_n = len(fdist)\n    # Initialize a fresh plot for the frequency distribution but do not show it\n    plt.figure()\n    ax = plt.subplot(111)\n    plt.close()\n    top_n_words = dict(fdist.most_common(top_n))\n    return ax, top_n_words", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
