{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.1296210289001465, "tests_passed": true, "error": null}}
{"selected_lines": [29, 27, 30, 33, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.18421196937561035, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17776823043823242, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 28, 33, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9370458126068115, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.109882116317749, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9646139144897461, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.1284699440002441, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17669987678527832, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.9061727523803711, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 32, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.026108980178833, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.03287911415100098, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 28, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0025639533996582, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 27, 30, 31, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 27, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.17616581916809082, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 31, 30, 27, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0185730457305908, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 28, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 29, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 1.098254919052124, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27, 33, 29, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 29, 27, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if len(numeric_df) == 0:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 30, 29, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.9486477375030518, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 28, 33, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.15376996994018555, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 29, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 31, 27, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 1.1324589252471924, "tests_passed": true, "error": null}}
{"selected_lines": [33, 27, 31, 28, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.004612922668457, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.023057222366333, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 29, 31, 30, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 31, 32, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.9754018783569336, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0688209533691406, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 27, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 32, 29, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 27, 29, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.2967989444732666, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.1127700805664062, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 28, 31, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 0.92740797996521, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 30, 27, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 33, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 1.1962718963623047, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18535280227661133, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 28, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.003409147262573242, "tests_passed": false, "error": "pandas.errors.IndexingError"}}
{"selected_lines": [30, 32, 29, 27, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9241139888763428, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 0.18715596199035645, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0025639533996582, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0016551017761230469, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 0.9944348335266113, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 32, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.0098719596862793, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 27, 31, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.0243871212005615, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 29, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.003409147262573242, "tests_passed": false, "error": "pandas.errors.IndexingError"}}
{"selected_lines": [32, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.122182846069336, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9773538112640381, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 32, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.024867057800293, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 27, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9906771183013916, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1099259853363037, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 28, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.99281907081604, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 31, 27, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 30, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 29, 27, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.0314772129058838, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 33, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 0.9610860347747803, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1182148456573486, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0411429405212402, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 30, 29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 31, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 1.0037140846252441, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 29, 27, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0731351375579834, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9327249526977539, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1712987422943115, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.9336428642272949, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 28, 27, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1159248352050781, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.18209290504455566, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 29, 28, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.8628740310668945, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17899417877197266, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1701350212097168, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0566742420196533, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 33, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 27, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 0.8561079502105713, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0012788772583008, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 0.18084406852722168, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17587614059448242, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 29, 31, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 0.9334146976470947, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 30, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 27, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33, 30, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.1340739727020264, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 27, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.9753608703613281, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 27, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17899417877197266, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 32, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0769729614257812, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 27, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9921982288360596, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.15424895286560059, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 31, 32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32, 28, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.116745948791504, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 33, 32, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.3056361675262451, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.1365609169006348, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1794109344482422, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 28, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 0.9816997051239014, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.18172216415405273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.17931175231933594, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 28, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.127171277999878, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17899417877197266, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17776823043823242, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.18421196937561035, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 33, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.9393141269683838, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.1096677780151367, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0045948028564453, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1854109764099121, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.29057788848876953, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 30, 27, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.9350519180297852, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 29, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0012731552124023, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": false, "time": 0.00016307830810546875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 0.1787431240081787, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.03287911415100098, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 0.18084406852722168, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": false, "time": 0.00016307830810546875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.18209290504455566, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 27, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.1284699440002441, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.9410958290100098, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18179893493652344, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 27, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.075347900390625, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1794109344482422, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 28, 29, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.0013177394866943, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1113767623901367, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 30, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1790778636932373, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 27, 31, 29, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 31, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.9859261512756348, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 28, 29, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0848429203033447, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.03145194053649902, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 0.1787431240081787, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.0275249481201172, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.0754308700561523, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 30, 28, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 31, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.0855212211608887, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 33, 29, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 31, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.0322117805480957, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 28, 32, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.18209290504455566, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17703890800476074, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 29, 30, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0804829597473145, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 30, 33, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 1.0283551216125488, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0045089721679688, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 31, 27, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.16125178337097168, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9327437877655029, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.133432149887085, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17530083656311035, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.9875361919403076, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 32, 30, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 31, 30, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1441371440887451, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 28, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.0744149684906006, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17776823043823242, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 29, 33, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 27, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.975944995880127, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17701005935668945, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17703890800476074, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.11809706687927246, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 33, 27, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 30, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.3692338466644287, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 27, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0833749771118164, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0411429405212402, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 30, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18169212341308594, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1776132583618164, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 28, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.9867699146270752, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 1.1515839099884033, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 31, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 1.0029041767120361, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0013318061828613, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17669987678527832, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 28, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.080683708190918, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1712987422943115, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 31, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 27, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.0052480697631836, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 33, 28, 31, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1127150058746338, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 27, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 32, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 32, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 0.9497802257537842, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29, 28, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.144312858581543, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17899417877197266, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9540760517120361, "tests_passed": true, "error": null}}
{"selected_lines": [33, 27, 30, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1764917373657227, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 29, 33, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 1.0869121551513672, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27, 31, 32, 28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.8761391639709473, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18214869499206543, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 27, 32, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1182148456573486, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 30, 29, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 28, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.9867699146270752, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 32, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9327249526977539, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.0135438442230225, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 33, 28, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 30, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.928645133972168, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 29, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.165492057800293, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.059927940368652344, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.009092092514038, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [31, 30, 32, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 30, 32, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 1.0880351066589355, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 33, 29, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 31, 32, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0029807090759277, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9327249526977539, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.122182846069336, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0016551017761230469, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": false, "time": 0.00016307830810546875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 30, 28, 31, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 1.0715107917785645, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17776823043823242, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.0016188621520996, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.0889122486114502, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 27, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.106590747833252, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0018208026885986, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 31, 29, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18535280227661133, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1794109344482422, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 31, 27, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 27, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 1.0916211605072021, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17899417877197266, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0156738758087158, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 31, 33, 28, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 33, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.1571359634399414, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 27, 33, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17530083656311035, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 0.18715596199035645, "tests_passed": true, "error": null}}
{"selected_lines": [29, 27, 28, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0867748260498047, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 1.0031249523162842, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 27, 31, 33, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1461610794067383, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.9481570720672607, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30, 32, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 27, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 1.14143705368042, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17776823043823242, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.03287911415100098, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31, 33, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 1.129281759262085, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17530083656311035, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.0025091171264648, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 31, 32, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.1038389205932617, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 27, 29, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.18213295936584473, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.5088398456573486, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9897568225860596, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0016551017761230469, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 0.17957782745361328, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.1565921306610107, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.9581522941589355, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31, 33, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 1.116729974746704, "tests_passed": true, "error": null}}
{"selected_lines": [29, 27, 33, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.9562180042266846, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.30452394485473633, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 30, 33, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18535280227661133, "tests_passed": true, "error": null}}
{"selected_lines": [28, 27, 32, 33, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 27, 28, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.30826306343078613, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 30, 27, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0712828636169434, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9646139144897461, "tests_passed": true, "error": null}}
{"selected_lines": [28, 27, 30, 29, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 1.0624730587005615, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.9774959087371826, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17747998237609863, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.1599831581115723, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 31, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.12583589553833, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.998262882232666, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 30, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.1055989265441895, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17701005935668945, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 0.11769914627075195, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.03145194053649902, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.019167184829711914, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 27, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.076340913772583, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.9753608703613281, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 1.065030813217163, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1776132583618164, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.0889122486114502, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9646139144897461, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 30, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9746711254119873, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.18172216415405273, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 28, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 30, 32, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 28, 33, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 1.0388100147247314, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 28, 27, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9921982288360596, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.03287911415100098, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1776132583618164, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 27, 32, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 28, 29, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.30803680419921875, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9569070339202881, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.18172216415405273, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.2981996536254883, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0014200210571289062, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 1.0336856842041016, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1004791259765625, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0032310485839844, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 29, 32, 33, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17701005935668945, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0045948028564453, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 33, 29, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.11809706687927246, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 27, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1794109344482422, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.109882116317749, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 0.17957782745361328, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 32, 31, 27, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30, 28, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.1557629108428955, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 31, 30, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9567172527313232, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 33, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 33, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 1.182344913482666, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [27, 32, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.0162179470062256, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 31, 30, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.18421196937561035, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.17616581916809082, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 27, 30, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1472327709197998, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 28, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.1147902011871338, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 0.11769914627075195, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 29, 31, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 28, 27, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1794109344482422, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.9596333503723145, "tests_passed": true, "error": null}}
{"selected_lines": [28, 27, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 30, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.007734775543213, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18214869499206543, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 33, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 31, 32, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.9575240612030029, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 27, 28, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1603400707244873, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 27, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 33, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 28, 27, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 31, 30, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 28, 27, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18535280227661133, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 27, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 32, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.9945762157440186, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32, 27, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.0050339698791504, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 32, 27, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.024299144744873, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.9753608703613281, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1478281021118164, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.9587690830230713, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 33, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 30, 33, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.11809706687927246, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 33, 31, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.0015358924865723, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 32, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.998176097869873, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.7060041427612305, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 33, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 31, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.00252103805542, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 28, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.1094262599945068, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [31, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 31, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.0760366916656494, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17899417877197266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.116593837738037, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 28, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 27, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=float)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 33, 29, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 0.9636211395263672, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 32, 30, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0389618873596191, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [31, 32, 30, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.9570412635803223, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 27, 30, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.18213295936584473, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 33, 28, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.17710280418396, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0031518936157227, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17181611061096191, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0016551017761230469, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [33, 30, 28, 32, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 31, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.1819899082183838, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.1168110370635986, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17776823043823242, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0032079219818115, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [27, 28, 29, 31, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1566369533538818, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 29, 32, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 1.144300937652588, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.9722633361816406, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 33, 32, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.0015301704406738, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [31, 27, 29, 30, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.0833966732025146, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.0035178661346436, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.026196002960205, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 29, 28, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1506891250610352, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.15424895286560059, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 30, 28, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.00252103805542, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 33, 31, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 1.0026521682739258, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": false, "time": 0.00016307830810546875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30, 33, 31, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.0035178661346436, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.11809706687927246, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 27, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.1594231128692627, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1712987422943115, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 32, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.959571123123169, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 32, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.18213295936584473, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": false, "time": 0.00016307830810546875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 32, 28, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.002878189086914, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [31, 28, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9768500328063965, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0016551017761230469, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 31, 29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.1644270420074463, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 28, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.2001328468322754, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 33, 29, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 33, 27, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if not numeric_df:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [29, 27, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17530083656311035, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0016551017761230469, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 27, 32, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 0.9679169654846191, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 31, 33, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.0410518646240234, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9514341354370117, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 28, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 33, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.1268541812896729, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 28, 32, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if not numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 31, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.0816080570220947, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 27, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.0058748722076416, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 30, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0024700164794922, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 27, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.1886019706726074, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [29, 27, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.0028131008148193, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 0.17957782745361328, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.18421196937561035, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 30, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.5280659198760986, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.9917716979980469, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 29, 27, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0867748260498047, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0022430419921875, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.18421196937561035, "tests_passed": true, "error": null}}
{"selected_lines": [33, 27, 28, 29, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 33, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 27, 30, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.03145194053649902, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32, 29, 27, 28, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 1.0060880184173584, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.31797099113464355, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 31, 30, 27, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 1.1200060844421387, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18535280227661133, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29, 33, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 29, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0828619003295898, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.016891002655029297, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1776132583618164, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 1.0025911331176758, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 32, 33, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.1591482162475586, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 29, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.177823781967163, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 31, 32, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.0044043064117432, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0032060146331787, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.012355089187622, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 27, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1704304218292236, "tests_passed": true, "error": null}}
{"selected_lines": [29, 27, 33, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.0388872623443604, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 28, 30, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 29, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.1293551921844482, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.022552251815796, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.30881810188293457, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 74.60449028015137, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.114713191986084, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 27, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 33, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df) == 0:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 1.5654489994049072, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0312650203704834, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.1846628189086914, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.1091868877410889, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.3352560997009277, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.0823233127593994, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.003409147262573242, "tests_passed": false, "error": "pandas.errors.IndexingError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.17931175231933594, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.9336428642272949, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.284471035003662, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1776132583618164, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 27, 30, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.17616581916809082, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.1249141693115234, "tests_passed": true, "error": null}}
{"selected_lines": [29, 27, 30, 31, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 28, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.0388498306274414, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [31, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.23338699340820312, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 30, 33, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.1856498718261719, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 33, 28, 31, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.005434274673462, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27, 32, 33, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.3728492259979248, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.2689430713653564, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17530083656311035, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 29, 28, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.0733318328857422, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18241596221923828, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 29, 27, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 27, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17703890800476074, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 33, 30, 27, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 1.272852897644043, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18169212341308594, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 29, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1704304218292236, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31, 29, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.0838000774383545, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 30, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.0191831588745117, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 29, 27, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 28, 33, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 1.168067216873169, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.1365609169006348, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.2746789455413818, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.3284189701080322, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 1.0546879768371582, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 29, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.020167350769043, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 27, 31, 28, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 29, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.9486477375030518, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18241596221923828, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.0043220520019531, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 30, 32, 27, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.7060041427612305, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1747608184814453, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 1.021806001663208, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 31, 32, 28, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17776823043823242, "tests_passed": true, "error": null}}
{"selected_lines": [31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.026108980178833, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 27, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.2079808712005615, "tests_passed": true, "error": null}}
{"selected_lines": [28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0493428707122803, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 31, 30, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1712987422943115, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 27, 31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 1.079768180847168, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17899417877197266, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 33, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 28, 32, 29, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 1.3623600006103516, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.059927940368652344, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17701005935668945, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.17877411842346191, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 31, 32, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 1.0410528182983398, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 27, 33, 29, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 30, 32, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.0141627788543701, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 27, 28, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.1760740280151367, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17530083656311035, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32, 28, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 29, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1739819049835205, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0045089721679688, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 32, 31, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.0855212211608887, "tests_passed": true, "error": null}}
{"selected_lines": [32, 29, 33, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0688209533691406, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27, 28, 29, 31, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1566369533538818, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 30, 28, 31, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.18209290504455566, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1783890724182129, "tests_passed": true, "error": null}}
{"selected_lines": [29, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 27, 30, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 31, 32, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.016891002655029297, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 0.1845388412475586, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.0523490905761719, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.003409147262573242, "tests_passed": false, "error": "pandas.errors.IndexingError"}}
{"selected_lines": [30, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 27, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.1465368270874023, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 33, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0379040241241455, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 32, 31, 30, 27, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 1.0490996837615967, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.18172216415405273, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17747998237609863, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.5088398456573486, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 29, 33, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.11809706687927246, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 28, 27, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 27, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.3186659812927246, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17530083656311035, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 29, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 29, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.053299903869629, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17747998237609863, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 29, 28, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 1.3529629707336426, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0940661430358887, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 1.0020878314971924, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 33, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 33, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0030369758605957, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.2981996536254883, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 0.1845388412475586, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.0469188690185547, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 30, 33, 31, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 29, 31, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty or does not contain any numeric columns\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1248879432678223, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.11809706687927246, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.17877411842346191, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.0162179470062256, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 30, 32, 27, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if len(numeric_df) == 0:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.3964180946350098, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1776132583618164, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 27, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.1822419166564941, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27, 31, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.0260019302368164, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 0.1787431240081787, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.32184600830078125, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0110039710998535, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 29, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 33, 30, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.030142068862915, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 30, 31, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1533057689666748, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True),\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 27, 30, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 33, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1854109764099121, "tests_passed": true, "error": null}}
{"selected_lines": [30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 29, 30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 31, 33, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 28, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.0061581134796143, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 31, 28, 33, 27, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.1819899082183838, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 27, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.284471035003662, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17703890800476074, "tests_passed": true, "error": null}}
{"selected_lines": [29, 32, 33, 31, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.0193989276885986, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 27, 29, 33, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.0031731128692627, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27, 29, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17821907997131348, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 31, 28, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.0017380714416504, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 29, 28, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.1038801670074463, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.17877411842346191, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9768500328063965, "tests_passed": true, "error": null}}
{"selected_lines": [33, 29, 31, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\", linewidth=0.2, annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 31, 32, 33, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 1.0031588077545166, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": false, "time": 0.00016307830810546875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0282540321350098, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 32, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.0200400352478027, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.5088398456573486, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.0086820125579834, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.18213295936584473, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0, skipna=False)\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 1.003114938735962, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 32, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.0368351936340332, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 29, 33, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.3266010284423828, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17530083656311035, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.0016188621520996, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32, 31, 30, 33, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 1.1453781127929688, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17776823043823242, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 29, 27, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 29, 33, 30, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.1340739727020264, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0012788772583008, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [27, 32, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.30881810188293457, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0143070220947266, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [29, 28, 27, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9921982288360596, "tests_passed": true, "error": null}}
{"selected_lines": [27, 33, 29, 28, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.8628740310668945, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9327249526977539, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [30, 33, 31, 29, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.016934871673584, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17701005935668945, "tests_passed": true, "error": null}}
{"selected_lines": [27, 29, 31, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0190978050231934, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29, 33, 28, 27, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9966409206390381, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1749129295349121, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 1.224498987197876, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 27, 29, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0292720794677734, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1790778636932373, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18241596221923828, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 32, 29, 27, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.1644597053527832, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 33, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 27, 33, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, fmt='g', cmap='cool')\n    return ax", "compilation_passed": true, "time": 1.0951032638549805, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1794109344482422, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 30, 32, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty or no numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 1.031263828277588, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.17931175231933594, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 33, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9897568225860596, "tests_passed": true, "error": null}}
{"selected_lines": [29, 33, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0394458770751953, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 29, 27, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn', annot=False, fmt='')\n    return ax", "compilation_passed": true, "time": 1.1584479808807373, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 0.17957782745361328, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 31, 27, 32, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.9773538112640381, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 33, 30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 1.0438640117645264, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 31, 32, 27, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 28, 32, 27, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='viridis', cbar_kws={'label': 'Cumulative Sum'},\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 32, 28, 33, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"Dataframe is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.2604279518127441, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis', annot=True, fmt=\"\")\n    return ax", "compilation_passed": true, "time": 0.18715596199035645, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 31, 30, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 1.0038080215454102, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 0.18172216415405273, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18183612823486328, "tests_passed": true, "error": null}}
{"selected_lines": [29, 31, 28, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if not numeric_df:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 29, 30, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, cmap=\"Blues\")\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [29, 33, 27, 31, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 27, 31, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.1778569221496582, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.1184170246124268, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": false, "time": 0.00019097328186035156, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [33, 30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 1.1091868877410889, "tests_passed": true, "error": null}}
{"selected_lines": [29, 30, 32, 27, 28, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap=\"coolwarm\")\n    return ax", "compilation_passed": true, "time": 1.1473369598388672, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.18214869499206543, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 29, 31, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) < 1:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [33, 30, 29, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.apply(pd.to_numeric).all()]\n    if not numeric_df:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.019167184829711914, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 28, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.T, cmap='YlGnBu')\n    return ax", "compilation_passed": true, "time": 0.23338699340820312, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17899417877197266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r', vmin=df_cumsum.min(), vmax=df_cumsum.max(), linewidth=1, annot=True, fmt='.1g', cbar_kws={\"label\": \"Sum\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": false, "time": 0.00016307830810546875, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [29, 28, 27, 32, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 0.9849281311035156, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.4933509826660156, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 33, 29, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 1.003000259399414, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df[df.columns[df.apply(lambda x: x.dtype.type in (int, float))]]\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0016551017761230469, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.17616581916809082, "tests_passed": true, "error": null}}
{"selected_lines": [28, 29, 27, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0157959461212158, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if numeric_df.empty:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidth=0,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 31, 27, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"coolwarm\", annot=True, cbar=False, annot_kws={\"size\": 5})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17776823043823242, "tests_passed": true, "error": null}}
{"selected_lines": [28, 33, 31, 32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"Empty or no numeric columns found in the DataFrame\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 32, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum,\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 28, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if numeric_df.empty:\n        raise ValueError(\"Dataframe is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum.to_numpy(), xticklabels=data.keys(), yticklabels=data.keys(), annot=True, square=True, linewidths=0.2, cbar_kws={\"shrink\": 1})\n    return ax", "compilation_passed": true, "time": 0.34068894386291504, "tests_passed": true, "error": null}}
{"selected_lines": [33, 27, 30, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.037299394607544, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 27, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap=\"RdBu\", annot=True)\n    return ax", "compilation_passed": true, "time": 1.1041738986968994, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 28, 30, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in DataFrame.\")\n    df_cumsum = numeric_df.cumsum(axis=0)\n    ax = sns.heatmap(df_cumsum, linewidth=0.1, linecolor=\"white\", square=True)\n    return ax", "compilation_passed": true, "time": 1.1636569499969482, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 31, 28, 33, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int64', 'float64'])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 1.100255012512207, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 31, 27, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0098180770874023, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0352110862731934, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 31, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.0012359619140625, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17703890800476074, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17669987678527832, "tests_passed": true, "error": null}}
{"selected_lines": [28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\", \"float\", \"integer\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17669987678527832, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdBu_r')\n    return ax", "compilation_passed": true, "time": 0.17616581916809082, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17574071884155273, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns found.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1752769947052002, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17530083656311035, "tests_passed": true, "error": null}}
{"selected_lines": [33, 28, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0030517578125, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [33, 30, 27, 32, 31, 28], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='RdYlGn')\n    return ax", "compilation_passed": true, "time": 1.0075139999389648, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [28, 30, 31, 29, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(np.number)\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns in data.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.003864049911499, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.0011582374572753906, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 32], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the dictionary.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm', linewidths=0.5, linecolor='white', cbar=False, annot=True)\n    return ax", "compilation_passed": true, "time": 1.093250036239624, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 27, 30, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=float)\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='viridis')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 29, 30], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"No numeric columns present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, annot=True, cmap='Blues')\n    return ax", "compilation_passed": true, "time": 1.2559831142425537, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 28, 33, 29, 31], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['number'])\n    if not numeric_df.empty:\n        raise ValueError(\"No numeric columns present in the DataFrame.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, cmap='coolwarm')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 33, 31, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=['int', 'float'])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum, linewidth=0.0, cbar=False, cmap=\"RdYlGn_r\", line_props={\"color\": \"white\"})\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 31, 33, 29, 27], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[int, float, \"int8\", \"int16\", \"int32\", \"int64\", \"uint8\", \"uint16\", \"uint32\", \"uint64\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty or no numeric columns are present.\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0007150173187256, "tests_passed": true, "error": null}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.17566680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 28, 29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[np.number])\n    if len(numeric_df.columns) == 0:\n        raise ValueError(\"DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0393052101135254, "tests_passed": false, "error": "TimeoutError"}}
{"selected_lines": [29], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame(data)\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if len(numeric_df) == 0:\n        raise ValueError(\"No numeric columns present\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 0.1794109344482422, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 28, 33], "result": {"code": "import pandas as pd\nimport seaborn as sns\n\ndef task_func(data):\n    \"\"\"\n    Creates and return a heatmap of the cumulative sum of each column in a dictionary.\n\n    Parameters:\n    - data (dict): A dictionary where the keys are the column names and the values are the column values.\n\n    Returns:\n    - matplotlib.axes._axes.Axes: The Axes object of the Seaborn heatmap.\n\n    Raises:\n    - ValueError: If the DataFrame is empty or if no numeric columns are present.\n\n    Requirements:\n    - pandas\n    - seaborn\n\n    Notes:\n    - Only numeric columns are considered for the heatmap. Non-numeric columns are ignored.\n\n    Example:\n    >>> data = {'A': [1, 2, 3], 'B': [4, 5, 6]}\n    >>> ax = task_func(data)\n    \"\"\"\n    df = pd.DataFrame.from_dict(data, orient=\"columns\")\n    numeric_df = df.select_dtypes(include=[\"number\"])\n    if numeric_df.empty:\n        raise ValueError(\"The DataFrame is empty\")\n    df_cumsum = numeric_df.cumsum()\n    ax = sns.heatmap(df_cumsum)\n    return ax", "compilation_passed": true, "time": 1.0305159091949463, "tests_passed": false, "error": "TimeoutError"}}
